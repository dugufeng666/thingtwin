/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var notification_notificationList = require('./notification-list.js');
var utils_dom = require('../utils/dom.js');
require('./notification.js');
require('tdesign-icons-vue-next');
require('../_chunks/dep-8fa35315.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-f022423f.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-96341f20.js');
require('../_chunks/dep-39c9581c.js');
require('../_chunks/dep-d7a38fb3.js');
require('../_chunks/dep-3b62827f.js');
require('../_chunks/dep-9f078572.js');
require('../_chunks/dep-7fc1ffe2.js');
require('../_chunks/dep-b1f64980.js');
require('../_chunks/dep-29224a9c.js');
require('../_chunks/dep-5ae95903.js');
require('../_chunks/dep-8675a24d.js');
require('../_chunks/dep-25e6caa1.js');
require('../_chunks/dep-c94b540e.js');
require('../_chunks/dep-53ee0c65.js');
require('../_chunks/dep-565984b5.js');
require('../_chunks/dep-92c5e4a5.js');
require('../_chunks/dep-78a63892.js');
require('../_chunks/dep-5d64466b.js');
require('../_chunks/dep-104f7ee1.js');
require('../_chunks/dep-e7786719.js');
require('../_chunks/dep-00397a41.js');
require('./props.js');
require('../hooks/useConfig.js');
require('../config-provider/hooks/useConfig.js');
require('../_chunks/dep-47100b3a.js');
require('../_chunks/dep-687d9447.js');
require('../_chunks/dep-84fc4531.js');
require('dayjs');
require('../_chunks/dep-22d9d967.js');
require('../_chunks/dep-98fbf983.js');
require('../_chunks/dep-5590274c.js');
require('../_chunks/dep-a929bdb8.js');
require('../_chunks/dep-689071d2.js');
require('../_chunks/dep-edc40e94.js');
require('../_chunks/dep-2ce2286c.js');
require('../_chunks/dep-bb55dbeb.js');
require('../_chunks/dep-e5e0508f.js');
require('../_chunks/dep-8a241271.js');
require('../_chunks/dep-c7e11941.js');
require('../_chunks/dep-7279283f.js');
require('../_chunks/dep-08fa391e.js');
require('../_chunks/dep-2963fcd8.js');
require('../hooks/useGlobalIcon.js');
require('./utils/animate.js');
require('./consts/index.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var seed = 0;
var instanceMap = /* @__PURE__ */new Map();
var NotificationFunction = function NotificationFunction(options) {
  seed += 1;
  var hackOptions = _objectSpread({
    placement: "top-right",
    zIndex: 6e3,
    attach: "body",
    id: seed
  }, options);
  hackOptions.content = options.content ? options.content : "";
  var attachEl = utils_dom.getAttach(hackOptions.attach);
  if (!instanceMap.get(attachEl)) {
    instanceMap.set(attachEl, {});
  }
  var tmpInstance = instanceMap.get(attachEl)[hackOptions.placement];
  if (!tmpInstance) {
    var wrapper = document.createElement("div");
    var instance = Vue.createApp(notification_notificationList["default"], {
      placement: hackOptions.placement
    }).mount(wrapper);
    instance.add(hackOptions);
    instanceMap.get(attachEl)[hackOptions.placement] = instance;
    tmpInstance = instance;
    attachEl.appendChild(instance.$el);
  } else {
    tmpInstance.add(hackOptions);
  }
  return new Promise(function (resolve) {
    var ins = instanceMap.get(attachEl)[hackOptions.placement];
    Vue.nextTick(function () {
      var notificationList = ins.notificationList;
      resolve(notificationList === null || notificationList === void 0 ? void 0 : notificationList.find(function (notify) {
        var _notify$$;
        return ((_notify$$ = notify.$) === null || _notify$$ === void 0 || (_notify$$ = _notify$$.vnode) === null || _notify$$ === void 0 ? void 0 : _notify$$.key) === hackOptions.id;
      }));
    });
  });
};
var showThemeNotification = function showThemeNotification(theme, options) {
  var hackOptions = _objectSpread(_objectSpread({}, options), {}, {
    theme: theme
  });
  return NotificationFunction(hackOptions);
};
var extraApi = {
  info: function info(options) {
    return showThemeNotification("info", options);
  },
  success: function success(options) {
    return showThemeNotification("success", options);
  },
  warning: function warning(options) {
    return showThemeNotification("warning", options);
  },
  error: function error(options) {
    return showThemeNotification("error", options);
  },
  close: function close(promise) {
    promise.then(function (instance) {
      return instance.close();
    });
  },
  closeAll: function closeAll() {
    instanceMap.forEach(function (attach) {
      Object.keys(attach).forEach(function (placement) {
        attach[placement].removeAll();
      });
    });
  }
};
var NotificationPlugin = showThemeNotification;
NotificationPlugin.install = function (app) {
  app.config.globalProperties.$notify = showThemeNotification;
  Object.keys(extraApi).forEach(function (funcName) {
    app.config.globalProperties.$notify[funcName] = extraApi[funcName];
  });
};
Object.keys(extraApi).forEach(function (funcName) {
  NotificationPlugin[funcName] = extraApi[funcName];
});
var NotifyPlugin = NotificationPlugin;

exports.NotifyPlugin = NotifyPlugin;
exports["default"] = NotificationPlugin;
//# sourceMappingURL=plugin.js.map
