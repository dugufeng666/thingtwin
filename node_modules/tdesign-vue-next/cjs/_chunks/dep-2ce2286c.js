/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

var identity = require('./dep-bb55dbeb.js');
var _overRest = require('./dep-e5e0508f.js');
var isArrayLike = require('./dep-78a63892.js');
var isObjectLike = require('./dep-3b62827f.js');

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return _overRest.setToString(_overRest.overRest(func, start, identity.identity), func + '');
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike.isObjectLike(value) && isArrayLike.isArrayLike(value);
}

exports.baseRest = baseRest;
exports.isArrayLikeObject = isArrayLikeObject;
//# sourceMappingURL=dep-2ce2286c.js.map
