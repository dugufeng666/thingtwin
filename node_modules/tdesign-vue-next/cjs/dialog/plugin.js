/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var dialog_dialog = require('./dialog.js');
var utils_dom = require('../utils/dom.js');
var omit = require('../_chunks/dep-9ca23be8.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('./props.js');
require('../hooks/useConfig.js');
require('../config-provider/hooks/useConfig.js');
require('../_chunks/dep-47100b3a.js');
require('../_chunks/dep-687d9447.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-84fc4531.js');
require('dayjs');
require('../_chunks/dep-22d9d967.js');
require('../_chunks/dep-98fbf983.js');
require('../_chunks/dep-5590274c.js');
require('../_chunks/dep-104f7ee1.js');
require('../_chunks/dep-c94b540e.js');
require('../_chunks/dep-39c9581c.js');
require('../_chunks/dep-f022423f.js');
require('../_chunks/dep-a929bdb8.js');
require('../_chunks/dep-00397a41.js');
require('../_chunks/dep-3b62827f.js');
require('../_chunks/dep-d7a38fb3.js');
require('../_chunks/dep-92c5e4a5.js');
require('../_chunks/dep-78a63892.js');
require('../_chunks/dep-5d64466b.js');
require('../_chunks/dep-689071d2.js');
require('../_chunks/dep-edc40e94.js');
require('../_chunks/dep-2ce2286c.js');
require('../_chunks/dep-bb55dbeb.js');
require('../_chunks/dep-e5e0508f.js');
require('../_chunks/dep-8a241271.js');
require('../_chunks/dep-c7e11941.js');
require('../_chunks/dep-7279283f.js');
require('../_chunks/dep-08fa391e.js');
require('../_chunks/dep-565984b5.js');
require('../_chunks/dep-e7786719.js');
require('../_chunks/dep-2963fcd8.js');
require('../_chunks/dep-96341f20.js');
require('../button/index.js');
require('../button/button.js');
require('../loading/index.js');
require('../_chunks/dep-6f7850dd.js');
require('../loading/plugin.js');
require('../loading/loading.js');
require('@babel/runtime/helpers/slicedToArray');
require('../loading/icon/gradient.js');
require('../_chunks/dep-00dea1d2.js');
require('../_chunks/dep-ec4a2dad.js');
require('../_chunks/dep-ceab8f85.js');
require('../_chunks/dep-a8fcbdcc.js');
require('../_chunks/dep-ec389751.js');
require('../_chunks/dep-8fa35315.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-9f078572.js');
require('../_chunks/dep-7fc1ffe2.js');
require('../_chunks/dep-b1f64980.js');
require('../_chunks/dep-29224a9c.js');
require('../_chunks/dep-5ae95903.js');
require('../_chunks/dep-8675a24d.js');
require('../_chunks/dep-25e6caa1.js');
require('../_chunks/dep-53ee0c65.js');
require('../hooks/useTeleport.js');
require('../loading/props.js');
require('../_chunks/dep-01fce6ff.js');
require('../_chunks/dep-2766940c.js');
require('../_chunks/dep-c6b053f2.js');
require('../_chunks/dep-3d3d9813.js');
require('../_chunks/dep-69e83dde.js');
require('../_chunks/dep-290797fe.js');
require('../_chunks/dep-f92d0863.js');
require('../utils/withInstall.js');
require('../button/props.js');
require('../hooks/useRipple.js');
require('../hooks/useKeepAnimation.js');
require('../hooks/useDisabled.js');
require('../_chunks/dep-b12afab7.js');
require('./hooks/useSameTarget.js');
require('../hooks/useDestroyOnClose.js');
require('../_chunks/dep-cc75a554.js');
require('../hooks/usePopupManager.js');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/classCallCheck');
require('./utils/index.js');
require('./dialog-card.js');
require('tdesign-icons-vue-next');
require('./dialog-card-props.js');
require('../hooks/useGlobalIcon.js');
require('./hooks/useAction.js');
require('../_chunks/dep-b658bf06.js');
require('../_chunks/dep-b84a0534.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var createDialog = function createDialog(props) {
  var options = _objectSpread({}, props);
  var wrapper = document.createElement("div");
  var visible = Vue.ref(false);
  var className = options.className,
    style = options.style;
  var preClassName = className;
  var updateClassNameStyle = function updateClassNameStyle(className2, style2) {
    if (className2) {
      if (preClassName && preClassName !== className2) {
        var _wrapper$firstElement;
        (_wrapper$firstElement = wrapper.firstElementChild.classList).remove.apply(_wrapper$firstElement, _toConsumableArray__default["default"](preClassName.split(" ").map(function (name) {
          return name.trim();
        })));
      }
      className2.split(" ").forEach(function (name) {
        wrapper.firstElementChild.classList.add(name.trim());
      });
    }
    if (style2) {
      wrapper.firstElementChild.style.cssText += style2;
    }
    preClassName = className2;
  };
  var component = Vue.defineComponent({
    setup: function setup(props2, _ref) {
      var expose = _ref.expose;
      var dialogOptions = Vue.ref(options);
      Vue.onMounted(function () {
        visible.value = true;
        document.activeElement.blur();
        Vue.nextTick(function () {
          updateClassNameStyle(className, style);
        });
      });
      var update = function update(newOptions) {
        dialogOptions.value = _objectSpread(_objectSpread({}, options), newOptions);
      };
      expose({
        update: update
      });
      return function () {
        var onClose = options.onClose || function () {
          visible.value = false;
        };
        delete options.className;
        delete options.style;
        return Vue.h(dialog_dialog["default"], _objectSpread({
          onClose: onClose,
          visible: visible.value
        }, dialogOptions.value));
      };
    }
  });
  var dialogComponent = Vue.createApp(component);
  var dialog = dialogComponent.mount(wrapper);
  var container = utils_dom.getAttach(options.attach);
  if (container) {
    container.appendChild(wrapper);
  } else {
    console.error("attach is not exist");
  }
  var dialogNode = {
    show: function show() {
      visible.value = true;
    },
    hide: function hide() {
      visible.value = false;
    },
    update: function update(newOptions) {
      dialog.update(omit.omit(newOptions, ["className", "style"]));
      updateClassNameStyle(newOptions.className, newOptions.style);
    },
    destroy: function destroy() {
      visible.value = false;
      setTimeout(function () {
        dialogComponent.unmount();
        wrapper.remove();
      }, 300);
    },
    setConfirmLoading: function setConfirmLoading(val) {
      dialog.update({
        confirmLoading: val
      });
    }
  };
  return dialogNode;
};
var confirm = function confirm(props) {
  return createDialog(props);
};
var alert = function alert(props) {
  var options = _objectSpread({}, props);
  options.cancelBtn = null;
  return createDialog(options);
};
var extraApi = {
  confirm: confirm,
  alert: alert
};
var DialogPlugin = createDialog;
DialogPlugin.install = function (app) {
  app.config.globalProperties.$dialog = createDialog;
  Object.keys(extraApi).forEach(function (funcName) {
    app.config.globalProperties.$dialog[funcName] = extraApi[funcName];
  });
};
Object.keys(extraApi).forEach(function (funcName) {
  DialogPlugin[funcName] = extraApi[funcName];
});

exports.DialogPlugin = DialogPlugin;
exports["default"] = DialogPlugin;
//# sourceMappingURL=plugin.js.map
