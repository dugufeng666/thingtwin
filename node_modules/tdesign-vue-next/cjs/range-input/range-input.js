/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var Vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var input_index = require('../input/index.js');
var rangeInput_props = require('./props.js');
var hooks_useVModel = require('../hooks/useVModel.js');
var hooks_useDisabled = require('../hooks/useDisabled.js');
var hooks_useReadonly = require('../hooks/useReadonly.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_tnode = require('../_chunks/dep-8fa35315.js');
var isArray = require('../_chunks/dep-d7a38fb3.js');
require('../input/input.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../input/props.js');
require('../input/hooks/useInput.js');
require('../form/consts/index.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/typeof');
require('../hooks/useKeepAnimation.js');
require('../config-provider/hooks/useConfig.js');
require('../_chunks/dep-47100b3a.js');
require('../_chunks/dep-687d9447.js');
require('../_chunks/dep-84fc4531.js');
require('dayjs');
require('../_chunks/dep-22d9d967.js');
require('../_chunks/dep-98fbf983.js');
require('../_chunks/dep-5590274c.js');
require('../_chunks/dep-104f7ee1.js');
require('../_chunks/dep-c94b540e.js');
require('../_chunks/dep-39c9581c.js');
require('../_chunks/dep-f022423f.js');
require('../_chunks/dep-a929bdb8.js');
require('../_chunks/dep-00397a41.js');
require('../_chunks/dep-3b62827f.js');
require('../_chunks/dep-92c5e4a5.js');
require('../_chunks/dep-78a63892.js');
require('../_chunks/dep-5d64466b.js');
require('../_chunks/dep-689071d2.js');
require('../_chunks/dep-edc40e94.js');
require('../_chunks/dep-2ce2286c.js');
require('../_chunks/dep-bb55dbeb.js');
require('../_chunks/dep-e5e0508f.js');
require('../_chunks/dep-8a241271.js');
require('../_chunks/dep-c7e11941.js');
require('../_chunks/dep-7279283f.js');
require('../_chunks/dep-08fa391e.js');
require('../_chunks/dep-565984b5.js');
require('../_chunks/dep-e7786719.js');
require('../_chunks/dep-2963fcd8.js');
require('../_chunks/dep-96341f20.js');
require('../input/hooks/useLengthLimit.js');
require('../_chunks/dep-94e74ea7.js');
require('../_chunks/dep-ec4a2dad.js');
require('../_chunks/dep-ceab8f85.js');
require('../_chunks/dep-a8fcbdcc.js');
require('../_chunks/dep-ec389751.js');
require('../input/hooks/useInputEventHandler.js');
require('../input/hooks/useInputWidth.js');
require('../hooks/useResizeObserver.js');
require('../_chunks/dep-b12afab7.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-9f078572.js');
require('../_chunks/dep-7fc1ffe2.js');
require('../_chunks/dep-b1f64980.js');
require('../_chunks/dep-29224a9c.js');
require('../_chunks/dep-5ae95903.js');
require('../_chunks/dep-8675a24d.js');
require('../_chunks/dep-25e6caa1.js');
require('../_chunks/dep-53ee0c65.js');
require('../input/input-group.js');
require('../input/input-group-props.js');
require('../utils/withInstall.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function calcArrayValue(value) {
  if (isArray.isArray(value)) {
    return value;
  }
  return [value, value];
}
var _RangeInput = Vue.defineComponent({
  name: "TRangeInput",
  inheritAttrs: false,
  props: rangeInput_props["default"],
  setup: function setup(props2, _ref) {
    var expose = _ref.expose,
      attrs = _ref.attrs;
    var _toRefs = Vue.toRefs(props2),
      value = _toRefs.value,
      modelValue = _toRefs.modelValue;
    var _useCommonClassName = hooks_useConfig.useCommonClassName(),
      STATUS = _useCommonClassName.STATUS,
      SIZE = _useCommonClassName.SIZE;
    var classPrefix = hooks_useConfig.usePrefixClass();
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("range-input");
    var _useGlobalIcon = hooks_useGlobalIcon.useGlobalIcon({
        CloseCircleFilledIcon: tdesignIconsVueNext.CloseCircleFilledIcon
      }),
      CloseCircleFilledIcon = _useGlobalIcon.CloseCircleFilledIcon;
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var isDisabled = hooks_useDisabled.useDisabled();
    var isReadonly = hooks_useReadonly.useReadonly();
    var focused = Vue.ref(false);
    var isHover = Vue.ref(false);
    var format = Vue.computed(function () {
      return calcArrayValue(props2.format);
    });
    var inputProps = Vue.computed(function () {
      return calcArrayValue(props2.inputProps);
    });
    var placeholder = Vue.computed(function () {
      return calcArrayValue(props2.placeholder);
    });
    var _useVModel = hooks_useVModel["default"](value, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray__default["default"](_useVModel, 2),
      innerValue = _useVModel2[0],
      setInnerValue = _useVModel2[1];
    var inputValue = Vue.computed(function () {
      var _ref2, _innerValue$value, _innerValue$value2;
      return String((_ref2 = ((_innerValue$value = innerValue.value) === null || _innerValue$value === void 0 ? void 0 : _innerValue$value[0]) || ((_innerValue$value2 = innerValue.value) === null || _innerValue$value2 === void 0 ? void 0 : _innerValue$value2[1])) !== null && _ref2 !== void 0 ? _ref2 : "");
    });
    var isShowClearIcon = Vue.computed(function () {
      var _inputValue$value;
      return (props2.clearable && ((_inputValue$value = inputValue.value) === null || _inputValue$value === void 0 ? void 0 : _inputValue$value.length) && !isDisabled.value || props2.showClearIconOnEmpty) && isHover.value;
    });
    var inputRefs = {
      firstInputRef: Vue.ref(),
      secondInputRef: Vue.ref()
    };
    function handleClear(context) {
      var _props2$onClear;
      (_props2$onClear = props2.onClear) === null || _props2$onClear === void 0 || _props2$onClear.call(props2, context);
      setInnerValue(["", ""], _objectSpread(_objectSpread({}, context), {}, {
        trigger: "clear",
        position: "all"
      }));
    }
    function handleEnter(rangeValue, context) {
      var _props2$onEnter;
      (_props2$onEnter = props2.onEnter) === null || _props2$onEnter === void 0 || _props2$onEnter.call(props2, rangeValue, context);
    }
    function handleFocus(rangeValue, context) {
      var _props2$onFocus;
      focused.value = true;
      (_props2$onFocus = props2.onFocus) === null || _props2$onFocus === void 0 || _props2$onFocus.call(props2, rangeValue, context);
    }
    function handleBlur(rangeValue, context) {
      var _props2$onBlur;
      focused.value = false;
      (_props2$onBlur = props2.onBlur) === null || _props2$onBlur === void 0 || _props2$onBlur.call(props2, rangeValue, context);
    }
    function handleMouseEnter(e) {
      var _props2$onMouseenter;
      isHover.value = true;
      props2 === null || props2 === void 0 || (_props2$onMouseenter = props2.onMouseenter) === null || _props2$onMouseenter === void 0 || _props2$onMouseenter.call(props2, {
        e: e
      });
    }
    function handleMouseLeave(e) {
      var _props2$onMouseleave;
      isHover.value = false;
      props2 === null || props2 === void 0 || (_props2$onMouseleave = props2.onMouseleave) === null || _props2$onMouseleave === void 0 || _props2$onMouseleave.call(props2, {
        e: e
      });
    }
    expose({
      firstInputElement: inputRefs.firstInputRef.value,
      secondInputElement: inputRefs.secondInputRef.value,
      focus: function focus(options) {
        var _inputRefs$value;
        var _ref3 = options || {},
          _ref3$position = _ref3.position,
          position = _ref3$position === void 0 ? "first" : _ref3$position;
        (_inputRefs$value = inputRefs["".concat(position, "InputRef")].value) === null || _inputRefs$value === void 0 || _inputRefs$value.focus();
      },
      blur: function blur(options) {
        var _inputRefs$value2;
        var _ref4 = options || {},
          _ref4$position = _ref4.position,
          position = _ref4$position === void 0 ? "first" : _ref4$position;
        (_inputRefs$value2 = inputRefs["".concat(position, "InputRef")].value) === null || _inputRefs$value2 === void 0 || _inputRefs$value2.blur();
      },
      select: function select(options) {
        var _inputRefs$value3;
        var _ref5 = options || {},
          _ref5$position = _ref5.position,
          position = _ref5$position === void 0 ? "first" : _ref5$position;
        (_inputRefs$value3 = inputRefs["".concat(position, "InputRef")].value) === null || _inputRefs$value3 === void 0 || _inputRefs$value3.select();
      }
    });
    return function () {
      var _innerValue$value3, _innerValue$value8;
      var labelContent = renderTNodeJSX("label");
      var prefixIconContent = renderTNodeJSX("prefixIcon");
      var suffixContent = renderTNodeJSX("suffix");
      var suffixIconContent = renderTNodeJSX("suffixIcon");
      var tips = renderTNodeJSX("tips");
      var separator = renderTNodeJSX("separator");
      var RangeInputContent = Vue.createVNode("div", Vue.mergeProps(attrs, {
        "class": [COMPONENT_NAME.value, _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, SIZE.value[props2.size], props2.size !== "medium"), STATUS.value.disabled, isDisabled.value), STATUS.value.focused, focused.value), STATUS.value.success, props2.status === "success"), STATUS.value.warning, props2.status === "warning"), STATUS.value.error, props2.status === "error"), "".concat(COMPONENT_NAME.value, "--prefix"), prefixIconContent || labelContent), "".concat(COMPONENT_NAME.value, "--suffix"), suffixContent || suffixIconContent), "".concat(COMPONENT_NAME.value, "--borderless"), props2.borderless)],
        "onMouseenter": handleMouseEnter,
        "onMouseleave": handleMouseLeave
      }), [Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__inner")
      }, [prefixIconContent && Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__prefix")
      }, [prefixIconContent]), labelContent ? Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__prefix")
      }, [labelContent]) : null, Vue.createVNode(input_index.Input, Vue.mergeProps({
        "ref": inputRefs.firstInputRef,
        "class": "".concat(COMPONENT_NAME.value, "__inner-left"),
        "inputClass": _defineProperty__default["default"]({}, "".concat(classPrefix.value, "-is-focused"), props2.activeIndex === 0),
        "placeholder": placeholder.value[0],
        "disabled": isDisabled.value,
        "readonly": isReadonly.value,
        "format": format.value[0],
        "value": (_innerValue$value3 = innerValue.value) === null || _innerValue$value3 === void 0 ? void 0 : _innerValue$value3[0],
        "onClick": function onClick(_ref8) {
          var _props2$onClick;
          var e = _ref8.e;
          return (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 ? void 0 : _props2$onClick.call(props2, {
            e: e,
            position: "first"
          });
        },
        "onClear": function onClear() {
          return setInnerValue([], {
            position: "first",
            trigger: "input"
          });
        },
        "onEnter": function onEnter(val, _ref9) {
          var _innerValue$value4;
          var e = _ref9.e;
          return handleEnter([val, (_innerValue$value4 = innerValue.value) === null || _innerValue$value4 === void 0 ? void 0 : _innerValue$value4[1]], {
            e: e,
            position: "first"
          });
        },
        "onFocus": function onFocus(val, _ref0) {
          var _innerValue$value5;
          var e = _ref0.e;
          return handleFocus([val, (_innerValue$value5 = innerValue.value) === null || _innerValue$value5 === void 0 ? void 0 : _innerValue$value5[1]], {
            e: e,
            position: "first"
          });
        },
        "onBlur": function onBlur(val, _ref1) {
          var _innerValue$value6;
          var e = _ref1.e;
          return handleBlur([val, (_innerValue$value6 = innerValue.value) === null || _innerValue$value6 === void 0 ? void 0 : _innerValue$value6[1]], {
            e: e,
            position: "first"
          });
        },
        "onChange": function onChange(val, _ref10) {
          var _innerValue$value7;
          var e = _ref10.e;
          return setInnerValue([val, (_innerValue$value7 = innerValue.value) === null || _innerValue$value7 === void 0 ? void 0 : _innerValue$value7[1]], {
            e: e,
            position: "first",
            trigger: "input"
          });
        }
      }, inputProps.value[0]), null), Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__inner-separator")
      }, [separator]), Vue.createVNode(input_index.Input, Vue.mergeProps({
        "ref": inputRefs.secondInputRef,
        "class": "".concat(COMPONENT_NAME.value, "__inner-right"),
        "inputClass": _defineProperty__default["default"]({}, "".concat(classPrefix.value, "-is-focused"), props2.activeIndex === 1),
        "placeholder": placeholder.value[1],
        "disabled": isDisabled.value,
        "readonly": isReadonly.value,
        "format": format.value[1],
        "value": (_innerValue$value8 = innerValue.value) === null || _innerValue$value8 === void 0 ? void 0 : _innerValue$value8[1],
        "onClick": function onClick(_ref12) {
          var _props2$onClick2;
          var e = _ref12.e;
          return (_props2$onClick2 = props2.onClick) === null || _props2$onClick2 === void 0 ? void 0 : _props2$onClick2.call(props2, {
            e: e,
            position: "second"
          });
        },
        "onClear": function onClear() {
          return setInnerValue([], {
            position: "second",
            trigger: "input"
          });
        },
        "onEnter": function onEnter(val, _ref13) {
          var _innerValue$value9;
          var e = _ref13.e;
          return handleEnter([(_innerValue$value9 = innerValue.value) === null || _innerValue$value9 === void 0 ? void 0 : _innerValue$value9[0], val], {
            e: e,
            position: "second"
          });
        },
        "onFocus": function onFocus(val, _ref14) {
          var _innerValue$value0;
          var e = _ref14.e;
          return handleFocus([(_innerValue$value0 = innerValue.value) === null || _innerValue$value0 === void 0 ? void 0 : _innerValue$value0[0], val], {
            e: e,
            position: "second"
          });
        },
        "onBlur": function onBlur(val, _ref15) {
          var _innerValue$value1;
          var e = _ref15.e;
          return handleBlur([(_innerValue$value1 = innerValue.value) === null || _innerValue$value1 === void 0 ? void 0 : _innerValue$value1[0], val], {
            e: e,
            position: "second"
          });
        },
        "onChange": function onChange(val, _ref16) {
          var _innerValue$value10;
          var e = _ref16.e;
          return setInnerValue([(_innerValue$value10 = innerValue.value) === null || _innerValue$value10 === void 0 ? void 0 : _innerValue$value10[0], val], {
            e: e,
            position: "second",
            trigger: "input"
          });
        }
      }, inputProps.value[1]), null), suffixContent ? Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__suffix")
      }, [suffixContent]) : null, (suffixIconContent || isShowClearIcon.value) && Vue.createVNode("span", {
        "class": "".concat(COMPONENT_NAME.value, "__suffix ").concat(COMPONENT_NAME.value, "__suffix-icon")
      }, [isShowClearIcon.value ? Vue.createVNode(CloseCircleFilledIcon, {
        "class": "".concat(COMPONENT_NAME.value, "__suffix-clear"),
        "onClick": handleClear
      }, null) : suffixIconContent])])]);
      var tipsClasses = ["".concat(COMPONENT_NAME.value, "__tips"), "".concat(classPrefix.value, "-tips"), "".concat(classPrefix.value, "-is-").concat(props2.status)];
      return Vue.createVNode(Vue.Fragment, null, [RangeInputContent, tips && Vue.createVNode("div", {
        "class": tipsClasses
      }, [tips])]);
    };
  }
});

exports["default"] = _RangeInput;
//# sourceMappingURL=range-input.js.map
