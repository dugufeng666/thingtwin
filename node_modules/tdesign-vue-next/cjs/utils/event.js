/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var camelCase = require('../_chunks/dep-9f078572.js');
var isString = require('../_chunks/dep-96341f20.js');
var isFunction = require('../_chunks/dep-c94b540e.js');
require('../_chunks/dep-7fc1ffe2.js');
require('../_chunks/dep-39c9581c.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-d7a38fb3.js');
require('../_chunks/dep-b1f64980.js');
require('../_chunks/dep-3b62827f.js');
require('../_chunks/dep-29224a9c.js');
require('../_chunks/dep-5ae95903.js');
require('../_chunks/dep-8675a24d.js');
require('../_chunks/dep-f022423f.js');

function getPropsApiByEvent(eventName) {
  return camelCase.camelCase("on-".concat(eventName));
}
function emitEvent(vm, eventName) {
  var emitEventMethodName;
  if (isString.isString(eventName)) {
    emitEventMethodName = getPropsApiByEvent(eventName);
  }
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }
  if (isFunction.isFunction(vm.$props[emitEventMethodName])) {
    var _vm$$props;
    (_vm$$props = vm.$props)[emitEventMethodName].apply(_vm$$props, args);
  } else {
    vm.$emit.apply(vm, [eventName].concat(args));
  }
}

exports.emitEvent = emitEvent;
exports.getPropsApiByEvent = getPropsApiByEvent;
//# sourceMappingURL=event.js.map
