/**
 * tdesign v1.12.0
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../_chunks/dep-ab7207a5.mjs';
import { defineComponent, toRefs, computed, createVNode } from 'vue';
import { RectangleIcon, SendIcon, StopCircleIcon } from 'tdesign-icons-vue-next';
import { Button } from '../button/index.mjs';
import { Textarea } from '../textarea/index.mjs';
import { u as useTNodeJSX } from '../_chunks/dep-8543d432.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import props from './chat-input-props.mjs';
import useVModel from '../hooks/useVModel.mjs';
import { useConfig } from '../config-provider/hooks/useConfig.mjs';
import '../_chunks/dep-113544a7.mjs';
import '../button/button.mjs';
import '../_chunks/dep-2124b297.mjs';
import '../_chunks/dep-e32fd926.mjs';
import '../_chunks/dep-488f17e4.mjs';
import '../loading/index.mjs';
import '../loading/directive.mjs';
import 'lodash-es';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_chunks/dep-62fc4108.mjs';
import '../_chunks/dep-e3b99a8c.mjs';
import '../_chunks/dep-7c806dae.mjs';
import '../config-provider/utils/context.mjs';
import '../_chunks/dep-039819d3.mjs';
import '../_chunks/dep-39bc09f2.mjs';
import '../_chunks/dep-dd3530fb.mjs';
import '../_chunks/dep-eb5cf880.mjs';
import '../utils/dom.mjs';
import '../hooks/useTeleport.mjs';
import '../loading/props.mjs';
import '../utils/render-tnode.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../button/props.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../hooks/useDisabled.mjs';
import '../textarea/textarea.mjs';
import '../textarea/utils/index.mjs';
import '../textarea/utils/calcTextareaHeight.mjs';
import '../form/consts/index.mjs';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDefaultValue.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useImagePreviewUrl.mjs';
import '../_chunks/dep-6c2db117.mjs';
import '../_chunks/dep-c43dcdde.mjs';
import '../hooks/useReadonly.mjs';
import '../input/hooks/useLengthLimit.mjs';
import '../_chunks/dep-dd1badd6.mjs';
import '../textarea/props.mjs';

var _ChatInput = defineComponent({
  name: "TChatInput",
  components: {
    RectangleIcon: RectangleIcon,
    SendIcon: SendIcon
  },
  props: props,
  emits: ["send", "stop", "update:modelValue", "blur", "focus"],
  setup: function setup(props2, _ref) {
    var slots = _ref.slots,
      emit = _ref.emit;
    var COMPONENT_NAME = usePrefixClass("chat");
    var _useConfig = useConfig("chat"),
      globalConfig = _useConfig.globalConfig;
    var _globalConfig$value = globalConfig.value,
      stopBtnText = _globalConfig$value.stopBtnText,
      placeholder = _globalConfig$value.placeholder;
    var _toRefs = toRefs(props2),
      value = _toRefs.value,
      modelValue = _toRefs.modelValue;
    var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      textValue = _useVModel2[0],
      setInnerValue = _useVModel2[1];
    var disabled = computed(function () {
      return props2.stopDisabled;
    });
    var textareaDisabled = computed(function () {
      return props2.disabled;
    });
    var autofocus = computed(function () {
      return props2.autofocus;
    });
    var autosize = computed(function () {
      return props2.autosize;
    });
    var placeholderText = computed(function () {
      var _props2$placeholder;
      return (_props2$placeholder = props2.placeholder) !== null && _props2$placeholder !== void 0 ? _props2$placeholder : placeholder;
    });
    var shiftDownFlag = false;
    var isComposition = false;
    var renderTNodeJSX = useTNodeJSX();
    var suffixIcon = renderTNodeJSX("suffixIcon") || slots.suffixIcon;
    var sendClick = function sendClick(e) {
      if (textValue.value && !disabled.value) {
        emit("send", textValue.value, {
          e: e
        });
        setInnerValue("", {
          e: e
        });
      }
    };
    var handleStop = function handleStop(e) {
      emit("stop", textValue.value, {
        e: e
      });
    };
    var textChange = function textChange(value2, context) {
      setInnerValue(value2, context);
    };
    var blurFn = function blurFn(value2, context) {
      emit("blur", value2, context);
    };
    var focusFn = function focusFn(value2, context) {
      emit("focus", value2, context);
    };
    var keydownFn = function keydownFn(value2, context) {
      var key = context.e.key;
      if (key === "Shift") {
        shiftDownFlag = true;
      }
      if (key === "Enter" && !shiftDownFlag && !isComposition) {
        context.e.cancelBubble = true;
        context.e.preventDefault();
        context.e.stopPropagation();
        sendClick(context.e);
      }
    };
    var keyupFn = function keyupFn(value2, context) {
      var key = context.e.key;
      if (key === "Shift") {
        shiftDownFlag = false;
      }
    };
    var compositionstartFn = function compositionstartFn() {
      isComposition = true;
    };
    var compositionendFn = function compositionendFn() {
      isComposition = false;
    };
    var getDefaultSuffixIcon = function getDefaultSuffixIcon() {
      return createVNode(Button, {
        "theme": "default",
        "size": "small",
        "variant": "text",
        "class": ["".concat(COMPONENT_NAME.value, "__footer__textarea__icon__default"), textValue.value ? "".concat(COMPONENT_NAME.value, "__footer__textarea__icon--focus") : ""],
        "disabled": disabled.value || !textValue.value || textareaDisabled.value
      }, {
        "default": function _default() {
          return [createVNode(SendIcon, null, null)];
        }
      });
    };
    var renderSuffixIcon = function renderSuffixIcon() {
      return suffixIcon ? suffixIcon : getDefaultSuffixIcon();
    };
    return function () {
      return createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__footer__content")
      }, [createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__footer__textarea")
      }, [createVNode(Textarea, {
        "value": textValue.value,
        "class": "noscrollbar",
        "placeholder": placeholderText.value,
        "disabled": textareaDisabled.value,
        "autofocus": autofocus.value,
        "autosize": autosize.value,
        "onChange": textChange,
        "onBlur": blurFn,
        "onFocus": focusFn,
        "onKeydown": keydownFn,
        "onKeyup": keyupFn,
        "onCompositionstart": compositionstartFn,
        "onCompositionend": compositionendFn
      }, null), createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__footer__textarea__icon"),
        "onClick": sendClick
      }, [renderSuffixIcon()])]), disabled.value && !textareaDisabled.value && createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__footer__stopbtn")
      }, [createVNode(Button, {
        "variant": "outline",
        "onClick": handleStop
      }, {
        "default": function _default() {
          return [createVNode(StopCircleIcon, null, null), stopBtnText];
        }
      })])]);
    };
  }
});

export { _ChatInput as default };
//# sourceMappingURL=chat-input.mjs.map
