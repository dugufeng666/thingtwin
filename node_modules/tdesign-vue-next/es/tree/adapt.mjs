/**
 * tdesign v1.12.0
 * (c) 2025 tdesign
 * @license MIT
 */

import * as Vue from 'vue';
export { TransitionGroup, computed, defineComponent, onMounted, reactive, ref, toRefs, watch } from 'vue';
import withInstall$1 from '../utils/withInstall.mjs';
import useVModel$1 from '../hooks/useVModel.mjs';
import useDefaultValue from '../hooks/useDefaultValue.mjs';
export { CaretRightSmallIcon as TdCaretRightSmallIcon } from 'tdesign-icons-vue-next';
export { Checkbox as TCheckBox } from '../checkbox/index.mjs';
export { Loading as TLoading } from '../loading/index.mjs';
export { usePrefixClass } from '../hooks/useConfig.mjs';
export { useGlobalIcon } from '../hooks/useGlobalIcon.mjs';
export { default as useLazyLoad } from '../hooks/useLazyLoad.mjs';
export { default as useVirtualScroll } from '../hooks/useVirtualScrollNew.mjs';
export { T as TreeNode, p as privateKey } from '../_chunks/dep-592b2784.mjs';
export { useConfig } from '../config-provider/hooks/useConfig.mjs';
import 'lodash-es';
import '../checkbox/checkbox.mjs';
import '../_chunks/dep-ab7207a5.mjs';
import '../_chunks/dep-113544a7.mjs';
import '../_chunks/dep-e32fd926.mjs';
import '../_chunks/dep-488f17e4.mjs';
import '../checkbox/props.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../config-provider/utils/context.mjs';
import '../_chunks/dep-039819d3.mjs';
import '../_chunks/dep-39bc09f2.mjs';
import '../_chunks/dep-dd3530fb.mjs';
import '../_chunks/dep-eb5cf880.mjs';
import '../_chunks/dep-62fc4108.mjs';
import '../_chunks/dep-8543d432.mjs';
import '../utils/render-tnode.mjs';
import '../checkbox/consts/index.mjs';
import '../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../_chunks/dep-89acd0df.mjs';
import '../checkbox/hooks/useKeyboardEvent.mjs';
import '../_chunks/dep-762112ef.mjs';
import '../hooks/useDisabled.mjs';
import '../hooks/useReadonly.mjs';
import '../checkbox/group.mjs';
import '../_chunks/dep-2124b297.mjs';
import '../checkbox/checkbox-group-props.mjs';
import '../hooks/slot.mjs';
import './style/css.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_chunks/dep-e3b99a8c.mjs';
import '../_chunks/dep-7c806dae.mjs';
import '../utils/dom.mjs';
import '../hooks/useTeleport.mjs';
import '../loading/props.mjs';
import '../hooks/useResizeObserver.mjs';
import '../_chunks/dep-fdffc704.mjs';
import '../_chunks/dep-4b507080.mjs';
import '../_chunks/dep-c43dcdde.mjs';
import '../_chunks/dep-dd1badd6.mjs';

var onDrag = {
  "default": void 0
};
var isVueNext = true;
var TreeItemDefinition = {
  name: "TTreeNode",
  inject: {
    onDrag: onDrag
  }
};
function useRipple(el) {}
function withInstall(construct) {
  return withInstall$1(construct);
}
function getCreateElement(h) {
  if (h) {}
  return Vue.h;
}
function getScopedSlots(instance) {
  return instance.$slots;
}
function useVModel(props, refsProps) {
  var propName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "value";
  var defaultPropName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "defaultValue";
  var eventPropName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "onChange";
  var eventName = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : "change";
  if (eventName) {}
  var modelValue = refsProps.modelValue;
  var vm;
  if (propName === "value") {
    vm = useVModel$1(refsProps[propName], modelValue, props[defaultPropName], props[eventPropName], propName);
  } else {
    vm = useDefaultValue(refsProps[propName], props[defaultPropName], props[eventPropName], propName);
  }
  return vm;
}

export { TreeItemDefinition, getCreateElement, getScopedSlots, isVueNext, useRipple, useVModel, withInstall };
//# sourceMappingURL=adapt.mjs.map
