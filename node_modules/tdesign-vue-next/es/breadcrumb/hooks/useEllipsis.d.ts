import { ComputedRef } from 'vue';
import type { TdBreadcrumbItemProps, TdBreadcrumbProps } from '../type';
export declare const useEllipsis: (props: TdBreadcrumbProps, getBreadcrumbItems: ComputedRef<TdBreadcrumbItemProps[]>, ellipsisContent: ComputedRef<string | any>) => {
    getDisplayItems: ComputedRef<(TdBreadcrumbItemProps | {
        content: any;
        disabled: boolean;
        isEllipsisItem: boolean;
    })[]>;
    getEllipsisItems: ComputedRef<{
        isLast: boolean;
        content?: string | import("../..").TNode;
        default?: string | import("../..").TNode;
        disabled?: boolean;
        href?: string;
        icon?: import("../..").TNode;
        maxWidth?: string;
        replace?: boolean;
        router?: any;
        target?: "_blank" | "_self" | "_parent" | "_top";
        to?: string | import("..").Route;
        onClick?: (e: MouseEvent) => void;
    }[]>;
};
