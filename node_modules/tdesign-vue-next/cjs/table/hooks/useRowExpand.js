/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var Vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var table_hooks_useClassName = require('./useClassName.js');
var hooks_tnode = require('../../_chunks/dep-8fa35315.js');
var hooks_useDefaultValue = require('../../hooks/useDefaultValue.js');
var configProvider_hooks_useConfig = require('../../config-provider/hooks/useConfig.js');
var hooks_useGlobalIcon = require('../../hooks/useGlobalIcon.js');
var get = require('../../_chunks/dep-3d3d9813.js');
require('../../hooks/useConfig.js');
require('../../_chunks/dep-47100b3a.js');
require('../../_chunks/dep-687d9447.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-84fc4531.js');
require('dayjs');
require('../../_chunks/dep-22d9d967.js');
require('../../_chunks/dep-98fbf983.js');
require('../../_chunks/dep-5590274c.js');
require('../../_chunks/dep-104f7ee1.js');
require('../../_chunks/dep-c94b540e.js');
require('../../_chunks/dep-39c9581c.js');
require('../../_chunks/dep-f022423f.js');
require('../../_chunks/dep-a929bdb8.js');
require('../../_chunks/dep-00397a41.js');
require('../../_chunks/dep-3b62827f.js');
require('../../_chunks/dep-d7a38fb3.js');
require('../../_chunks/dep-92c5e4a5.js');
require('../../_chunks/dep-78a63892.js');
require('../../_chunks/dep-5d64466b.js');
require('../../_chunks/dep-689071d2.js');
require('../../_chunks/dep-edc40e94.js');
require('../../_chunks/dep-2ce2286c.js');
require('../../_chunks/dep-bb55dbeb.js');
require('../../_chunks/dep-e5e0508f.js');
require('../../_chunks/dep-8a241271.js');
require('../../_chunks/dep-c7e11941.js');
require('../../_chunks/dep-7279283f.js');
require('../../_chunks/dep-08fa391e.js');
require('../../_chunks/dep-565984b5.js');
require('../../_chunks/dep-e7786719.js');
require('../../_chunks/dep-2963fcd8.js');
require('../../_chunks/dep-96341f20.js');
require('../../utils/render-tnode.js');
require('../../_chunks/dep-9f078572.js');
require('../../_chunks/dep-7fc1ffe2.js');
require('../../_chunks/dep-b1f64980.js');
require('../../_chunks/dep-29224a9c.js');
require('../../_chunks/dep-5ae95903.js');
require('../../_chunks/dep-8675a24d.js');
require('../../_chunks/dep-25e6caa1.js');
require('../../_chunks/dep-53ee0c65.js');
require('../../_chunks/dep-69e83dde.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

function useRowExpand(props, context) {
  var _toRefs = Vue.toRefs(props),
    expandedRowKeys = _toRefs.expandedRowKeys;
  var renderTNode = hooks_tnode.useTNodeJSX();
  var _useConfig = configProvider_hooks_useConfig.useConfig("table", props.locale),
    t = _useConfig.t,
    globalConfig = _useConfig.globalConfig;
  var _useGlobalIcon = hooks_useGlobalIcon.useGlobalIcon({
      ChevronRightCircleIcon: tdesignIconsVueNext.ChevronRightCircleIcon
    }),
    ChevronRightCircleIcon = _useGlobalIcon.ChevronRightCircleIcon;
  var _useClassName = table_hooks_useClassName["default"](),
    tableExpandClasses = _useClassName.tableExpandClasses,
    positiveRotate90 = _useClassName.positiveRotate90,
    tableFullRowClasses = _useClassName.tableFullRowClasses;
  var _useDefaultValue = hooks_useDefaultValue["default"](expandedRowKeys, props.defaultExpandedRowKeys || [], props.onExpandChange, "expandedRowKeys"),
    _useDefaultValue2 = _slicedToArray__default["default"](_useDefaultValue, 2),
    tExpandedRowKeys = _useDefaultValue2[0],
    setTExpandedRowKeys = _useDefaultValue2[1];
  var showExpandedRow = Vue.computed(function () {
    return Boolean(props.expandedRow || context.slots.expandedRow || context.slots["expanded-row"]);
  });
  var showExpandIconColumn = Vue.computed(function () {
    return props.expandIcon !== false && showExpandedRow.value;
  });
  var isFirstColumnFixed = Vue.computed(function () {
    var _props$columns;
    return ((_props$columns = props.columns) === null || _props$columns === void 0 || (_props$columns = _props$columns[0]) === null || _props$columns === void 0 ? void 0 : _props$columns.fixed) === "left";
  });
  var getExpandedRowClass = function getExpandedRowClass(params) {
    var _tExpandedRowKeys$val;
    if (!showExpandedRow.value) return null;
    var row = params.row,
      rowKey = params.rowKey;
    var currentRowKey = get.get(row, rowKey || "id");
    return tableExpandClasses[(_tExpandedRowKeys$val = tExpandedRowKeys.value) !== null && _tExpandedRowKeys$val !== void 0 && _tExpandedRowKeys$val.includes(currentRowKey) ? "rowExpanded" : "rowFolded"];
  };
  var onToggleExpand = function onToggleExpand(e, row) {
    props.expandOnRowClick && e.stopPropagation();
    var currentId = get.get(row, props.rowKey || "id");
    var index = tExpandedRowKeys.value.indexOf(currentId);
    var newKeys = _toConsumableArray__default["default"](tExpandedRowKeys.value);
    index !== -1 ? newKeys.splice(index, 1) : newKeys.push(currentId);
    setTExpandedRowKeys(newKeys, {
      expandedRowData: props.data.filter(function (t2) {
        return newKeys.includes(get.get(t2, props.rowKey || "id"));
      }),
      currentRowData: row
    });
  };
  var renderExpandIcon = function renderExpandIcon(_, p) {
    var row = p.row,
      rowIndex = p.rowIndex;
    var currentId = get.get(row, props.rowKey || "id");
    var expanded = tExpandedRowKeys.value.includes(currentId);
    var icon = renderTNode("expandIcon", {
      defaultNode: t(globalConfig.value.expandIcon) || Vue.createVNode(ChevronRightCircleIcon, null, null),
      params: {
        row: row,
        index: rowIndex
      }
    });
    if (!icon) return null;
    var classes = [tableExpandClasses.iconBox, tableExpandClasses[expanded ? "expanded" : "collapsed"], _defineProperty__default["default"]({}, positiveRotate90, expanded)];
    return Vue.createVNode("span", {
      "class": classes,
      "onClick": function onClick(e) {
        return onToggleExpand(e, row);
      }
    }, [icon]);
  };
  var getExpandColumn = function getExpandColumn() {
    var expandCol = {
      colKey: "__EXPAND_ROW_ICON_COLUMN__",
      width: 46,
      className: tableExpandClasses.iconCell,
      fixed: isFirstColumnFixed.value ? "left" : void 0,
      cell: renderExpandIcon,
      stopPropagation: true
    };
    return expandCol;
  };
  var renderExpandedRow = function renderExpandedRow(p) {
    var rowId = get.get(p.row, props.rowKey || "id");
    if (!tExpandedRowKeys.value || !tExpandedRowKeys.value.includes(rowId)) return null;
    var isFixedLeft = p.isWidthOverflow && props.columns.find(function (item) {
      return item.fixed === "left";
    });
    return Vue.createVNode("tr", {
      "key": "expand_".concat(rowId),
      "class": [tableExpandClasses.row, _defineProperty__default["default"]({}, tableFullRowClasses.base, isFixedLeft)]
    }, [Vue.createVNode("td", {
      "colspan": p.columns.length
    }, [Vue.createVNode("div", {
      "class": [tableExpandClasses.rowInner, _defineProperty__default["default"]({}, tableFullRowClasses.innerFullRow, isFixedLeft)],
      "style": isFixedLeft ? {
        width: "".concat(p.tableWidth, "px")
      } : {}
    }, [Vue.createVNode("div", {
      "class": tableFullRowClasses.innerFullElement
    }, [renderTNode("expandedRow", {
      params: p
    })])])])]);
  };
  var onInnerExpandRowClick = function onInnerExpandRowClick(p) {
    onToggleExpand(p.e, p.row);
  };
  return {
    showExpandedRow: showExpandedRow,
    showExpandIconColumn: showExpandIconColumn,
    getExpandColumn: getExpandColumn,
    renderExpandedRow: renderExpandedRow,
    onInnerExpandRowClick: onInnerExpandRowClick,
    getExpandedRowClass: getExpandedRowClass
  };
}

exports["default"] = useRowExpand;
//# sourceMappingURL=useRowExpand.js.map
