/**
 * tdesign v1.12.0
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-e32fd926.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-ab7207a5.mjs';
import { defineComponent, toRefs, computed, provide, createVNode } from 'vue';
import props from './props.mjs';
import useVModel from '../hooks/useVModel.mjs';
import { u as useTNodeJSX } from '../_chunks/dep-8543d432.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import '../_chunks/dep-488f17e4.mjs';
import '../_chunks/dep-113544a7.mjs';
import 'lodash-es';
import '../utils/render-tnode.mjs';
import '../config-provider/hooks/useConfig.mjs';
import '../config-provider/utils/context.mjs';
import '../_chunks/dep-039819d3.mjs';
import '../_chunks/dep-39bc09f2.mjs';
import '../_chunks/dep-dd3530fb.mjs';
import '../_chunks/dep-eb5cf880.mjs';

var _Collapse = defineComponent({
  name: "TCollapse",
  props: props,
  setup: function setup(props2) {
    var componentName = usePrefixClass("collapse");
    var borderlessClass = usePrefixClass("-border-less");
    var renderTNodeJSX = useTNodeJSX();
    var _toRefs = toRefs(props2),
      value = _toRefs.value,
      expandMutex = _toRefs.expandMutex,
      borderless = _toRefs.borderless,
      modelValue = _toRefs.modelValue;
    var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      collapseValue = _useVModel2[0],
      setCollapseValue = _useVModel2[1];
    var updateCollapseValue = function updateCollapseValue(value2) {
      var newValue = [].concat(collapseValue.value || []);
      var index = newValue.indexOf(value2);
      if (index >= 0) {
        newValue.splice(index, 1);
      } else if (expandMutex.value) {
        newValue = [value2];
      } else {
        newValue.push(value2);
      }
      setCollapseValue(newValue);
    };
    var classes = computed(function () {
      return [componentName.value, _defineProperty({}, borderlessClass.value, !!borderless.value)];
    });
    var getUniqId = function () {
      var index = 0;
      return function () {
        return index++;
      };
    }();
    provide("collapseValue", collapseValue);
    provide("updateCollapseValue", updateCollapseValue);
    provide("collapseProps", toRefs(props2));
    provide("getUniqId", getUniqId);
    provide("renderParentTNode", renderTNodeJSX);
    return function () {
      var nodes = renderTNodeJSX("default");
      return createVNode("div", {
        "class": classes.value
      }, [nodes]);
    };
  }
});

export { _Collapse as default };
//# sourceMappingURL=collapse.mjs.map
