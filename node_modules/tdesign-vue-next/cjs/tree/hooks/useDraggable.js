/**
 * tdesign v1.12.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
require('tdesign-icons-vue-next');
require('../../checkbox/index.js');
require('../../loading/index.js');
require('../../config-provider/hooks/useConfig.js');
require('../../utils/dom.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/slicedToArray');
require('@babel/runtime/helpers/asyncToGenerator');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/defineProperty');
require('@babel/runtime/regenerator');
var throttle = require('../../_chunks/dep-4302d998.js');
require('../../checkbox/checkbox.js');
require('../../checkbox/props.js');
require('../../hooks/useVModel.js');
require('../../_chunks/dep-3c0d3dc9.js');
require('../../_chunks/dep-0b6e5f33.js');
require('../../_chunks/dep-6441bda0.js');
require('../../_chunks/dep-fa2fda14.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-a76126df.js');
require('../../_chunks/dep-54b7116c.js');
require('../../_chunks/dep-5247a460.js');
require('../../hooks/useRipple.js');
require('../../hooks/useKeepAnimation.js');
require('../../_chunks/dep-ede16f7f.js');
require('../../_chunks/dep-1d38e864.js');
require('../../_chunks/dep-75a87f7c.js');
require('dayjs');
require('../../_chunks/dep-99110617.js');
require('../../_chunks/dep-5e2171e6.js');
require('../../_chunks/dep-ce3eb768.js');
require('../../_chunks/dep-4479843a.js');
require('../../_chunks/dep-4bb500b8.js');
require('../../_chunks/dep-0e58cbbd.js');
require('../../_chunks/dep-00f18931.js');
require('../../_chunks/dep-84a0e81d.js');
require('../../_chunks/dep-564b3613.js');
require('../../_chunks/dep-11fc6f95.js');
require('../../_chunks/dep-c3bc048f.js');
require('../../_chunks/dep-58abd685.js');
require('../../_chunks/dep-3a0b641f.js');
require('../../_chunks/dep-e6692a32.js');
require('../../_chunks/dep-10d5d599.js');
require('../../_chunks/dep-41ef4b47.js');
require('../../_chunks/dep-d0783150.js');
require('../../_chunks/dep-9e87e1e1.js');
require('../../_chunks/dep-fcea8340.js');
require('../../_chunks/dep-2debdee8.js');
require('../../_chunks/dep-1c142d75.js');
require('../../_chunks/dep-c1b17346.js');
require('../../_chunks/dep-94fa6b5d.js');
require('../../_chunks/dep-12a3fd02.js');
require('../../hooks/useConfig.js');
require('../../_chunks/dep-0290afd5.js');
require('../../_chunks/dep-db9cff9c.js');
require('../../utils/render-tnode.js');
require('../../_chunks/dep-3a1cfa95.js');
require('../../_chunks/dep-36b83f83.js');
require('../../_chunks/dep-e2633705.js');
require('../../_chunks/dep-5472dcbf.js');
require('../../checkbox/consts/index.js');
require('../../checkbox/hooks/useCheckboxLazyLoad.js');
require('../../_chunks/dep-8c390b09.js');
require('../../checkbox/hooks/useKeyboardEvent.js');
require('../../_chunks/dep-d1e9ac5b.js');
require('../../hooks/useDisabled.js');
require('../../_chunks/dep-1e4a8214.js');
require('../../hooks/useReadonly.js');
require('../../checkbox/group.js');
require('../../checkbox/checkbox-group-props.js');
require('../../hooks/slot.js');
require('../../_chunks/dep-e2429209.js');
require('../../_chunks/dep-425a3c77.js');
require('../../_chunks/dep-6d957e14.js');
require('../../_chunks/dep-6bdaf809.js');
require('../../utils/withInstall.js');
require('../../_chunks/dep-14125703.js');
require('../../loading/plugin.js');
require('../../loading/loading.js');
require('../../loading/icon/gradient.js');
require('../../_chunks/dep-ce66c261.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../_chunks/dep-19f6d038.js');
require('../../_chunks/dep-272b1445.js');
require('../../hooks/useTeleport.js');
require('../../loading/props.js');
require('../../_chunks/dep-9ab88918.js');
require('../../_chunks/dep-449af6ce.js');
require('../../_chunks/dep-13bdf55b.js');
require('../../_chunks/dep-f0a744e5.js');
require('../../_chunks/dep-c8867018.js');
require('../../_chunks/dep-350b64b1.js');
require('../../_chunks/dep-7f787fb7.js');
require('../../_chunks/dep-b5ec465c.js');

var DragPosition = /* @__PURE__ */function (DragPosition2) {
  DragPosition2[DragPosition2["Before"] = -1] = "Before";
  DragPosition2[DragPosition2["Inside"] = 0] = "Inside";
  DragPosition2[DragPosition2["After"] = 1] = "After";
  return DragPosition2;
}(DragPosition || {});
function useDraggable(state) {
  var treeItemRef = state.treeItemRef;
  var dragStates = Vue.reactive({
    isDragOver: false,
    isDragging: false,
    dropPosition: 0 /* Inside */
  });
  var updateDropPosition = function updateDropPosition(dragEvent) {
    var _rootNode$getBounding;
    var rootNode = treeItemRef.value;
    if (!rootNode) return;
    var rect = rootNode === null || rootNode === void 0 || (_rootNode$getBounding = rootNode.getBoundingClientRect) === null || _rootNode$getBounding === void 0 ? void 0 : _rootNode$getBounding.call(rootNode);
    var offsetY = window.scrollY + rect.top;
    var pageY = dragEvent.pageY;
    var gapHeight = rect.height / 4;
    var diff = pageY - offsetY;
    if (diff < gapHeight) {
      dragStates.dropPosition = -1 /* Before */;
    } else if (diff < rect.height - gapHeight) {
      dragStates.dropPosition = 0 /* Inside */;
    } else {
      dragStates.dropPosition = 1 /* After */;
    }
  };
  var setDragStatus = function setDragStatus(status, dragEvent) {
    var _drag$handleDragStart, _drag$handleDragEnd, _drag$handleDragOver, _drag$handleDragLeave, _drag$handleDrop;
    var node = state.node,
      treeScope = state.treeScope;
    var drag = treeScope.drag;
    if (!drag) return;
    switch (status) {
      case "dragStart":
        dragStates.isDragging = true;
        dragStates.dropPosition = 0 /* Inside */;
        (_drag$handleDragStart = drag.handleDragStart) === null || _drag$handleDragStart === void 0 || _drag$handleDragStart.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "dragEnd":
        dragStates.isDragging = false;
        dragStates.isDragOver = false;
        dragStates.dropPosition = 0 /* Inside */;
        throttleUpdateDropPosition.cancel();
        (_drag$handleDragEnd = drag.handleDragEnd) === null || _drag$handleDragEnd === void 0 || _drag$handleDragEnd.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "dragOver":
        dragStates.isDragOver = true;
        throttleUpdateDropPosition(dragEvent);
        (_drag$handleDragOver = drag.handleDragOver) === null || _drag$handleDragOver === void 0 || _drag$handleDragOver.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "dragLeave":
        dragStates.isDragOver = false;
        dragStates.dropPosition = 0 /* Inside */;
        throttleUpdateDropPosition.cancel();
        (_drag$handleDragLeave = drag.handleDragLeave) === null || _drag$handleDragLeave === void 0 || _drag$handleDragLeave.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "drop":
        (_drag$handleDrop = drag.handleDrop) === null || _drag$handleDrop === void 0 || _drag$handleDrop.call(drag, {
          node: node,
          dropPosition: dragStates.dropPosition,
          dragEvent: dragEvent
        });
        dragStates.isDragOver = false;
        throttleUpdateDropPosition.cancel();
        break;
    }
  };
  var handleDragStart = function handleDragStart(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    setDragStatus("dragStart", evt);
    try {
      var _evt$dataTransfer;
      (_evt$dataTransfer = evt.dataTransfer) === null || _evt$dataTransfer === void 0 || _evt$dataTransfer.setData("text/plain", "");
    } catch (e) {}
  };
  var handleDragEnd = function handleDragEnd(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    setDragStatus("dragEnd", evt);
  };
  var handleDragOver = function handleDragOver(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    evt.preventDefault();
    setDragStatus("dragOver", evt);
  };
  var handleDragLeave = function handleDragLeave(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    setDragStatus("dragLeave", evt);
  };
  var handleDrop = function handleDrop(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    evt.preventDefault();
    setDragStatus("drop", evt);
  };
  var throttleUpdateDropPosition = throttle.throttle(function (dragEvent) {
    updateDropPosition(dragEvent);
  });
  return {
    dragStates: dragStates,
    handleDragStart: handleDragStart,
    handleDragEnd: handleDragEnd,
    handleDragOver: handleDragOver,
    handleDragLeave: handleDragLeave,
    handleDrop: handleDrop
  };
}

exports.DragPosition = DragPosition;
exports["default"] = useDraggable;
//# sourceMappingURL=useDraggable.js.map
