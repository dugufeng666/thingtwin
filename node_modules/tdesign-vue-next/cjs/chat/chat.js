/**
 * tdesign v1.12.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var chat_props = require('./props.js');
var divider_index = require('../divider/index.js');
var popconfirm_index = require('../popconfirm/index.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_tnode = require('../_chunks/dep-db9cff9c.js');
var chat_chatItem = require('./chat-item.js');
var configProvider_hooks_useConfig = require('../config-provider/hooks/useConfig.js');
var isArray = require('../_chunks/dep-a76126df.js');
require('../divider/divider.js');
require('../divider/props.js');
require('../_chunks/dep-ede16f7f.js');
require('../_chunks/dep-1d38e864.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-75a87f7c.js');
require('dayjs');
require('../_chunks/dep-99110617.js');
require('../_chunks/dep-5e2171e6.js');
require('../_chunks/dep-ce3eb768.js');
require('../_chunks/dep-4479843a.js');
require('../_chunks/dep-4bb500b8.js');
require('../_chunks/dep-fa2fda14.js');
require('../_chunks/dep-0e58cbbd.js');
require('../_chunks/dep-00f18931.js');
require('../_chunks/dep-84a0e81d.js');
require('../_chunks/dep-5247a460.js');
require('../_chunks/dep-564b3613.js');
require('../_chunks/dep-11fc6f95.js');
require('../_chunks/dep-c3bc048f.js');
require('../_chunks/dep-58abd685.js');
require('../_chunks/dep-3a0b641f.js');
require('../_chunks/dep-e6692a32.js');
require('../_chunks/dep-10d5d599.js');
require('../_chunks/dep-41ef4b47.js');
require('../_chunks/dep-d0783150.js');
require('../_chunks/dep-9e87e1e1.js');
require('../_chunks/dep-fcea8340.js');
require('../_chunks/dep-2debdee8.js');
require('../_chunks/dep-1c142d75.js');
require('../_chunks/dep-c1b17346.js');
require('../_chunks/dep-94fa6b5d.js');
require('../_chunks/dep-12a3fd02.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-3a1cfa95.js');
require('../_chunks/dep-6441bda0.js');
require('../_chunks/dep-54b7116c.js');
require('../_chunks/dep-36b83f83.js');
require('../_chunks/dep-e2633705.js');
require('../_chunks/dep-0b6e5f33.js');
require('../_chunks/dep-3c0d3dc9.js');
require('../_chunks/dep-5472dcbf.js');
require('../utils/withInstall.js');
require('../popconfirm/popconfirm.js');
require('@babel/runtime/helpers/slicedToArray');
require('../hooks/useGlobalIcon.js');
require('../popup/index.js');
require('../popup/popup.js');
require('@popperjs/core');
require('../hooks/useKeepAnimation.js');
require('../_chunks/dep-0290afd5.js');
require('../hooks/useVModel.js');
require('../utils/dom.js');
require('../popup/container.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../popup/props.js');
require('../hooks/useResizeObserver.js');
require('../_chunks/dep-7f787fb7.js');
require('../_chunks/dep-b5ec465c.js');
require('../popconfirm/props.js');
require('../dialog/hooks/useAction.js');
require('../button/index.js');
require('../button/button.js');
require('../loading/index.js');
require('../_chunks/dep-14125703.js');
require('../loading/plugin.js');
require('../loading/loading.js');
require('../loading/icon/gradient.js');
require('../_chunks/dep-ce66c261.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../_chunks/dep-6bdaf809.js');
require('../_chunks/dep-19f6d038.js');
require('../_chunks/dep-272b1445.js');
require('../hooks/useTeleport.js');
require('../loading/props.js');
require('../_chunks/dep-9ab88918.js');
require('../_chunks/dep-425a3c77.js');
require('../_chunks/dep-449af6ce.js');
require('../_chunks/dep-13bdf55b.js');
require('../_chunks/dep-f0a744e5.js');
require('../_chunks/dep-c8867018.js');
require('../_chunks/dep-350b64b1.js');
require('../button/props.js');
require('../hooks/useRipple.js');
require('../hooks/useDisabled.js');
require('../_chunks/dep-1e4a8214.js');
require('../_chunks/dep-b381bc1a.js');
require('../_chunks/dep-89cb0bb6.js');
require('../_chunks/dep-dee45c79.js');
require('./chat-item-props.js');
require('../skeleton/index.js');
require('../skeleton/skeleton.js');
require('../skeleton/props.js');
require('./chat-content.js');
require('./chat-content-props.js');
require('../_chunks/dep-158edd82.js');
require('@babel/runtime/helpers/wrapNativeSuper');
require('@babel/runtime/helpers/possibleConstructorReturn');
require('@babel/runtime/helpers/getPrototypeOf');
require('@babel/runtime/helpers/inherits');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
require('./chat-loading.js');
require('./chat-loading-props.js');
require('./chat-reasoning.js');
require('./chat-reasoning-props.js');
require('../collapse/index.js');
require('../collapse/collapse.js');
require('../collapse/props.js');
require('../collapse/collapse-panel.js');
require('../collapse/collapse-panel-props.js');
require('../common-components/fake-arrow.js');
require('../hooks/useCollapseAnimation.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var handleScrollToBottom = function handleScrollToBottom(target, behavior) {
  var currentScrollHeight = target.scrollHeight;
  var currentClientHeight = target.clientHeight;
  var innerBehavior = behavior !== null && behavior !== void 0 ? behavior : "auto";
  if (innerBehavior === "auto") {
    target.scrollTop = currentScrollHeight - currentClientHeight;
  } else {
    var startScrollTop = target.scrollTop;
    var endScrollTop = currentScrollHeight - currentClientHeight;
    var duration = 300;
    var step = (endScrollTop - startScrollTop) / duration;
    var startTime;
    var _animateScroll = function animateScroll(time) {
      if (!startTime) {
        startTime = time;
      }
      var elapsed = time - startTime;
      var top = Math.min(endScrollTop, startScrollTop + elapsed * step);
      target.scrollTop = top;
      if (top < endScrollTop) {
        requestAnimationFrame(_animateScroll);
      }
    };
    requestAnimationFrame(_animateScroll);
  }
};
var _Chat = Vue.defineComponent({
  name: "TChat",
  props: chat_props["default"],
  emits: ["clear", "scroll"],
  setup: function setup(props2, _ref) {
    var emit = _ref.emit,
      expose = _ref.expose,
      slots = _ref.slots;
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("chat");
    var _useConfig = configProvider_hooks_useConfig.useConfig("chat"),
      globalConfig = _useConfig.globalConfig;
    var _globalConfig$value = globalConfig.value,
      clearHistoryBtnText = _globalConfig$value.clearHistoryBtnText,
      confirmClearHistory = _globalConfig$value.confirmClearHistory;
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    Vue.provide("textLoading", props2.textLoading);
    Vue.provide("animation", props2.animation);
    Vue.provide("reverse", props2.reverse);
    var classes = Vue.computed(function () {
      return [COMPONENT_NAME.value, _defineProperty__default["default"]({}, "".concat(COMPONENT_NAME.value, "--normal"), props2.layout === "both")];
    });
    var listClasses = Vue.computed(function () {
      return ["".concat(COMPONENT_NAME.value, "__list"), _defineProperty__default["default"]({}, "".concat(COMPONENT_NAME.value, "__list--reverse"), props2.reverse)];
    });
    var renderBody = function renderBody() {
      var data = renderTNodeJSX("data");
      if (isArray.isArray(data) && data.length > 0) {
        var isLoading = function isLoading(index) {
          return (props2.reverse ? index === 0 : index === data.length - 1) && props2.textLoading;
        };
        var isReasoningLoading = function isReasoningLoading(index) {
          return (props2.reverse ? index === 0 : index === data.length - 1) && props2.isStreamLoad;
        };
        var setReasoning = function setReasoning(item) {
          return slots.content ? false : item.reasoning;
        };
        return data.map(function (item, index) {
          return Vue.createVNode(chat_chatItem["default"], {
            "avatar": item.avatar,
            "name": item.name,
            "role": item.role,
            "datetime": item.datetime,
            "content": item.content,
            "reasoning": setReasoning(item),
            "reasoningLoading": isReasoningLoading(index),
            "text-loading": isLoading(index),
            "itemIndex": index,
            "animation": props2.animation
          }, {
            actions: function actions() {
              return renderTNodeJSX("actions", {
                params: {
                  item: item,
                  index: index
                }
              });
            },
            name: function name() {
              return renderTNodeJSX("name", {
                params: {
                  item: item,
                  index: index
                }
              });
            },
            avatar: function avatar() {
              return renderTNodeJSX("avatar", {
                params: {
                  item: item,
                  index: index
                }
              });
            },
            datetime: function datetime() {
              return renderTNodeJSX("datetime", {
                params: {
                  item: item,
                  index: index
                }
              });
            },
            content: function content() {
              return renderTNodeJSX("content", {
                params: {
                  item: item,
                  index: index
                }
              });
            }
          });
        });
      } else {
        return renderTNodeJSX("default");
      }
    };
    var clearConfirm = function clearConfirm(context) {
      emit("clear", context);
    };
    var defaultClearHistory = Vue.createVNode(popconfirm_index.Popconfirm, {
      "content": confirmClearHistory,
      "onConfirm": clearConfirm
    }, {
      "default": function _default() {
        return [Vue.createVNode(divider_index.Divider, {
          "class": "clear-btn"
        }, {
          "default": function _default() {
            return [Vue.createVNode(tdesignIconsVueNext.ClearIcon, {
              "size": "14px"
            }, null), Vue.createVNode("span", {
              "class": "clear-btn-text"
            }, [clearHistoryBtnText])];
          }
        })];
      }
    });
    var showFooter = Vue.computed(function () {
      return renderTNodeJSX("footer");
    });
    var chatBoxRef = Vue.ref();
    var scrollToBottom = function scrollToBottom(data) {
      if (!chatBoxRef.value) return;
      var _data$behavior = data.behavior,
        behavior = _data$behavior === void 0 ? "auto" : _data$behavior;
      handleScrollToBottom(chatBoxRef.value, behavior);
    };
    var handleScroll = function handleScroll(e) {
      emit("scroll", {
        e: e
      });
    };
    expose({
      scrollToBottom: scrollToBottom
    });
    return function () {
      return Vue.createVNode("div", {
        "class": classes.value
      }, [Vue.createVNode("div", {
        "class": listClasses.value,
        "ref": chatBoxRef,
        "onScroll": handleScroll
      }, [props2.reverse && Vue.createVNode("div", {
        "class": "place-holder"
      }, null), props2.reverse && props2.clearHistory && renderTNodeJSX("clearHistory", defaultClearHistory), renderBody(), !props2.reverse && props2.clearHistory && renderTNodeJSX("clearHistory", defaultClearHistory)]), showFooter.value && Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__footer")
      }, [showFooter.value])]);
    };
  }
});

exports["default"] = _Chat;
//# sourceMappingURL=chat.js.map
