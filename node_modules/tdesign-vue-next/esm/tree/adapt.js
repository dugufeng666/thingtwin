/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

import * as Vue from 'vue';
export { TransitionGroup, computed, defineComponent, onMounted, reactive, ref, toRefs, watch } from 'vue';
import withInstall$1 from '../utils/withInstall.js';
import useVModel$1 from '../hooks/useVModel.js';
import useDefaultValue from '../hooks/useDefaultValue.js';
export { CaretRightSmallIcon as TdCaretRightSmallIcon } from 'tdesign-icons-vue-next';
export { Checkbox as TCheckBox } from '../checkbox/index.js';
export { Loading as TLoading } from '../loading/index.js';
export { usePrefixClass } from '../hooks/useConfig.js';
export { useGlobalIcon } from '../hooks/useGlobalIcon.js';
export { default as useLazyLoad } from '../hooks/useLazyLoad.js';
export { default as useVirtualScroll } from '../hooks/useVirtualScrollNew.js';
export { T as TreeNode, p as privateKey } from '../_chunks/dep-326daa7c.js';
export { useConfig } from '../config-provider/hooks/useConfig.js';
import 'lodash-es';
import '../checkbox/checkbox.js';
import '@babel/runtime/helpers/slicedToArray';
import '@babel/runtime/helpers/defineProperty';
import '../checkbox/props.js';
import '../hooks/useRipple.js';
import '../hooks/useKeepAnimation.js';
import '../config-provider/utils/context.js';
import '../_chunks/dep-b296c28c.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-d5ba1b57.js';
import 'dayjs';
import '../_chunks/dep-1614d661.js';
import '../_chunks/dep-b668a2a6.js';
import '../utils/render-tnode.js';
import '../checkbox/consts/index.js';
import '../checkbox/hooks/useCheckboxLazyLoad.js';
import '../_chunks/dep-f1a418d4.js';
import '../checkbox/hooks/useKeyboardEvent.js';
import '../_chunks/dep-c1958f59.js';
import '../hooks/useDisabled.js';
import '../hooks/useReadonly.js';
import '../checkbox/group.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../checkbox/checkbox-group-props.js';
import '../hooks/slot.js';
import 'tdesign-vue-next/esm/common/style/web/components/checkbox/_index.less';
import '../loading/directive.js';
import '../loading/plugin.js';
import '../loading/loading.js';
import '../loading/icon/gradient.js';
import '../_chunks/dep-4eefc93a.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../utils/dom.js';
import '../hooks/useTeleport.js';
import '../loading/props.js';
import 'tdesign-vue-next/esm/common/style/web/components/loading/_index.less';
import '../hooks/useResizeObserver.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/helpers/classCallCheck';
import '@babel/runtime/helpers/createClass';
import '@babel/runtime/regenerator';
import '../_chunks/dep-988f7f09.js';

var onDrag = {
  "default": void 0
};
var isVueNext = true;
var TreeItemDefinition = {
  name: "TTreeNode",
  inject: {
    onDrag: onDrag
  }
};
function useRipple(el) {}
function withInstall(construct) {
  return withInstall$1(construct);
}
function getCreateElement(h) {
  return Vue.h;
}
function getScopedSlots(instance) {
  return instance.$slots;
}
function useVModel(props, refsProps) {
  var propName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "value";
  var defaultPropName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "defaultValue";
  var eventPropName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "onChange";
  var modelValue = refsProps.modelValue;
  var vm;
  if (propName === "value") {
    vm = useVModel$1(refsProps[propName], modelValue, props[defaultPropName], props[eventPropName], propName);
  } else {
    vm = useDefaultValue(refsProps[propName], props[defaultPropName], props[eventPropName], propName);
  }
  return vm;
}

export { TreeItemDefinition, getCreateElement, getScopedSlots, isVueNext, useRipple, useVModel, withInstall };
//# sourceMappingURL=adapt.js.map
