/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-4c19ba66.mjs';
import { defineComponent, computed, provide, createVNode, mergeProps } from 'vue';
import TimeLineProps from './props.mjs';
import { DefaultAlign, TimelineInjectKey } from './hooks/index.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { useChildComponentSlots } from '../hooks/slot.mjs';
import _TimelineItem from './timeline-item.mjs';
import '../_chunks/dep-9e34a8ce.mjs';
import { l as log } from '../_chunks/dep-2f8437f0.mjs';
import '../_chunks/dep-3a46b404.mjs';
import '../config-provider/hooks/useConfig.mjs';
import 'lodash-es';
import '../config-provider/utils/context.mjs';
import '../_chunks/dep-960f05e3.mjs';
import '../_chunks/dep-608ebfe7.mjs';
import '../_chunks/dep-0f539ccd.mjs';
import '../_chunks/dep-3873beae.mjs';
import '../_chunks/dep-c7a7c399.mjs';
import '../_chunks/dep-52e265eb.mjs';
import '../utils/render-tnode.mjs';
import './timeline-item-props.mjs';
import '../_chunks/dep-8664c288.mjs';
import '../loading/index.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../_chunks/dep-c9dbce85.mjs';
import '../loading/icon/gradient.mjs';
import '../_chunks/dep-487987c7.mjs';
import '../_chunks/dep-b638a875.mjs';
import '../_chunks/dep-c514ed63.mjs';
import '../utils/dom.mjs';
import '../hooks/useTeleport.mjs';
import '../loading/props.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';

var _Timeline = defineComponent({
  name: "TTimeline",
  props: TimeLineProps,
  setup: function setup(props) {
    var COMPONENT_NAME = usePrefixClass("timeline");
    var renderAlign = computed(function () {
      var labelAlign = props.labelAlign,
        layout = props.layout;
      var res = layout === "vertical" ? "left" : "top";
      if (layout === "vertical" && labelAlign) {
        var index = DefaultAlign.horizontal.indexOf(labelAlign);
        var isError = index !== -1;
        isError && log.warn("Timeline", 'If layout is vertical, align should be "left","alternate" or "right" ');
        res = isError ? DefaultAlign.vertical[index] : labelAlign;
      }
      if (layout === "horizontal" && labelAlign) {
        var _index = DefaultAlign.vertical.indexOf(labelAlign);
        var _isError = _index !== -1;
        _isError && log.warn("Timeline", 'If layout is horizontal, align should be "top","alternate" or "bottom" ');
        res = _isError ? DefaultAlign.horizontal[_index] : labelAlign;
      }
      return res;
    });
    var TimeLineProvide = computed(function () {
      var theme = props.theme,
        reverse = props.reverse,
        layout = props.layout,
        labelAlign = props.labelAlign,
        mode = props.mode;
      return {
        theme: theme,
        reverse: reverse,
        itemsStatus: [""],
        layout: layout,
        globalAlign: labelAlign,
        mode: mode,
        renderAlign: renderAlign.value
      };
    });
    var hasLabelItem = 1;
    provide(TimelineInjectKey, TimeLineProvide);
    return function () {
      var getChildComponentSlots = useChildComponentSlots();
      var timelineItems = getChildComponentSlots("TTimelineItem");
      if (props.reverse) timelineItems = timelineItems.reverse();
      return createVNode("ul", {
        "class": ["".concat(COMPONENT_NAME.value), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(COMPONENT_NAME.value, "-").concat(renderAlign.value), true), "".concat(COMPONENT_NAME.value, "-reverse"), props.reverse), "".concat(COMPONENT_NAME.value, "-").concat(props.layout), true), "".concat(COMPONENT_NAME.value, "-label"), hasLabelItem), "".concat(COMPONENT_NAME.value, "-label--").concat(props.mode), true)]
      }, [timelineItems.map(function (item, index) {
        return createVNode(_TimelineItem, mergeProps(item.props, {
          "index": index,
          "class": _defineProperty({}, "".concat(COMPONENT_NAME.value, "-item--last"), index === timelineItems.length - 1)
        }), item.children);
      })]);
    };
  }
});

export { _Timeline as default };
//# sourceMappingURL=timeline.mjs.map
