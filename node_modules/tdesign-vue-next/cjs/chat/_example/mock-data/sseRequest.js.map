{"version":3,"file":"sseRequest.js","sources":["../../../../../components/chat/_example/mock-data/sseRequest.ts"],"sourcesContent":["export class MockSSEResponse {\n  private controller!: ReadableStreamDefaultController<Uint8Array>;\n  private encoder = new TextEncoder();\n  private stream: ReadableStream<Uint8Array>;\n  private error: boolean;\n\n  constructor(\n    private data: string,\n    private delay: number = 300,\n    error = false, // 新增参数，默认为false\n  ) {\n    this.error = error;\n\n    this.stream = new ReadableStream({\n      start: (controller) => {\n        this.controller = controller;\n        if (!this.error) {\n          // 如果不是错误情况，则开始推送数据\n          setTimeout(() => this.pushData(), this.delay); // 延迟开始推送数据\n        }\n      },\n      cancel() {},\n    });\n  }\n\n  private pushData() {\n    if (this.data.length === 0) {\n      this.controller.close();\n      return;\n    }\n    try {\n      const chunk = this.data.slice(0, 1);\n      this.data = this.data.slice(1);\n\n      this.controller.enqueue(this.encoder.encode(chunk));\n\n      if (this.data.length > 0) {\n        setTimeout(() => this.pushData(), this.delay);\n      } else {\n        // 数据全部发送完毕后关闭流\n        setTimeout(() => this.controller.close(), this.delay);\n      }\n    } catch {}\n  }\n\n  getResponse(): Promise<Response> {\n    return new Promise((resolve) => {\n      // 使用setTimeout来模拟网络延迟\n      setTimeout(() => {\n        if (this.error) {\n          const errorResponseOptions = { status: 500, statusText: 'Internal Server Error' };\n\n          // 返回模拟的网络错误响应，这里我们使用500状态码作为示例\n          resolve(new Response(null, errorResponseOptions));\n        } else {\n          resolve(new Response(this.stream));\n        }\n      }, this.delay); // 使用构造函数中设置的delay值作为延迟时间\n    });\n  }\n}\n"],"names":["MockSSEResponse","data","_this","delay","arguments","length","undefined","error","_classCallCheck","_defineProperty","TextEncoder","stream","ReadableStream","start","controller","setTimeout","pushData","cancel","_createClass","key","value","_this2","close","chunk","slice","enqueue","encoder","encode","_unused","getResponse","_this3","Promise","resolve","errorResponseOptions","status","statusText","Response"],"mappings":"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"}