/**
 * tdesign v1.12.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var hooks_useConfig = require('../hooks/useConfig.js');
var chat_chatItemProps = require('./chat-item-props.js');
var skeleton_index = require('../skeleton/index.js');
var hooks_tnode = require('../_chunks/dep-db9cff9c.js');
var chat_chatContent = require('./chat-content.js');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var chat_chatLoading = require('./chat-loading.js');
var chat_chatReasoning = require('./chat-reasoning.js');
var configProvider_hooks_useConfig = require('../config-provider/hooks/useConfig.js');
var isString = require('../_chunks/dep-12a3fd02.js');
var isObject = require('../_chunks/dep-0e58cbbd.js');
require('../_chunks/dep-ede16f7f.js');
require('../_chunks/dep-1d38e864.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-75a87f7c.js');
require('dayjs');
require('../_chunks/dep-99110617.js');
require('../_chunks/dep-5e2171e6.js');
require('../_chunks/dep-ce3eb768.js');
require('../_chunks/dep-4479843a.js');
require('../_chunks/dep-4bb500b8.js');
require('../_chunks/dep-fa2fda14.js');
require('../_chunks/dep-00f18931.js');
require('../_chunks/dep-84a0e81d.js');
require('../_chunks/dep-5247a460.js');
require('../_chunks/dep-a76126df.js');
require('../_chunks/dep-564b3613.js');
require('../_chunks/dep-11fc6f95.js');
require('../_chunks/dep-c3bc048f.js');
require('../_chunks/dep-58abd685.js');
require('../_chunks/dep-3a0b641f.js');
require('../_chunks/dep-e6692a32.js');
require('../_chunks/dep-10d5d599.js');
require('../_chunks/dep-41ef4b47.js');
require('../_chunks/dep-d0783150.js');
require('../_chunks/dep-9e87e1e1.js');
require('../_chunks/dep-fcea8340.js');
require('../_chunks/dep-2debdee8.js');
require('../_chunks/dep-1c142d75.js');
require('../_chunks/dep-c1b17346.js');
require('../_chunks/dep-94fa6b5d.js');
require('../skeleton/skeleton.js');
require('../skeleton/props.js');
require('../_chunks/dep-272b1445.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-3a1cfa95.js');
require('../_chunks/dep-6441bda0.js');
require('../_chunks/dep-54b7116c.js');
require('../_chunks/dep-36b83f83.js');
require('../_chunks/dep-e2633705.js');
require('../_chunks/dep-0b6e5f33.js');
require('../_chunks/dep-3c0d3dc9.js');
require('../_chunks/dep-5472dcbf.js');
require('../utils/withInstall.js');
require('./chat-content-props.js');
require('../_chunks/dep-158edd82.js');
require('@babel/runtime/helpers/wrapNativeSuper');
require('@babel/runtime/helpers/slicedToArray');
require('@babel/runtime/helpers/possibleConstructorReturn');
require('@babel/runtime/helpers/getPrototypeOf');
require('@babel/runtime/helpers/inherits');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
require('./chat-loading-props.js');
require('./chat-reasoning-props.js');
require('../collapse/index.js');
require('../collapse/collapse.js');
require('../collapse/props.js');
require('../hooks/useVModel.js');
require('../collapse/collapse-panel.js');
require('../collapse/collapse-panel-props.js');
require('../common-components/fake-arrow.js');
require('../hooks/useCollapseAnimation.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _ChatItem = Vue.defineComponent({
  name: "TChatItem",
  props: _objectSpread(_objectSpread({}, chat_chatItemProps["default"]), {}, {
    reasoningLoading: {
      type: Boolean,
      "default": false
    }
  }),
  emits: ["operation"],
  setup: function setup(props2) {
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("chat");
    var _useConfig = configProvider_hooks_useConfig.useConfig("chat"),
      globalConfig = _useConfig.globalConfig;
    var _globalConfig$value = globalConfig.value,
      loadingText = _globalConfig$value.loadingText,
      loadingEndText = _globalConfig$value.loadingEndText;
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var role = Vue.computed(function () {
      return renderTNodeJSX("role");
    });
    var variant = Vue.computed(function () {
      return renderTNodeJSX("variant");
    });
    Vue.provide("role", role);
    return function () {
      var roleValue = renderTNodeJSX("role");
      var name = renderTNodeJSX("name", {
        slotFirst: true
      }) || props2.name;
      var datetime = renderTNodeJSX("datetime", {
        slotFirst: true
      }) || props2.datetime;
      var avatar = renderTNodeJSX("avatar", {
        slotFirst: true
      }) || props2.avatar;
      var showNameDatetime = Vue.computed(function () {
        return name || datetime;
      });
      var content = renderTNodeJSX("content", {
        slotFirst: true
      }) || props2.content;
      var contentClasses = Vue.computed(function () {
        return showNameDatetime.value ? ["".concat(COMPONENT_NAME.value, "__content")] : ["".concat(COMPONENT_NAME.value, "__content"), "".concat(COMPONENT_NAME.value, "__content--base")];
      });
      var avatarDom = avatar ? Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__avatar")
      }, [Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__avatar__box")
      }, [isString.isString(avatar) ? Vue.createVNode("img", {
        "src": avatar,
        "alt": "",
        "class": "".concat(COMPONENT_NAME.value, "__avatar-image")
      }, null) : avatar])]) : null;
      var nameDatetimeDom = showNameDatetime.value && Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__base")
      }, [name && Vue.createVNode("span", {
        "class": "".concat(COMPONENT_NAME.value, "__name")
      }, [name]), datetime && Vue.createVNode("span", {
        "class": "".concat(COMPONENT_NAME.value, "__time")
      }, [datetime])]);
      var textLoading = props2.textLoading;
      var reasoningLoading = props2.reasoningLoading;
      var showActions = Vue.computed(function () {
        return renderTNodeJSX("actions");
      });
      var renderHeader = function renderHeader() {
        if (reasoningLoading) {
          return Vue.createVNode(chat_chatLoading["default"], {
            "text": loadingText
          }, null);
        }
        return Vue.createVNode("div", {
          "style": "display:flex;align-items:center"
        }, [Vue.createVNode(tdesignIconsVueNext.CheckCircleIcon, {
          "style": {
            color: "var(--td-success-color-5)",
            fontSize: "20px",
            marginRight: "8px"
          }
        }, null), Vue.createVNode("span", null, [loadingEndText])]);
      };
      var contentDom = Vue.createVNode(Vue.Fragment, null, [role.value !== "model-change" && avatarDom, Vue.createVNode("div", {
        "class": contentClasses.value
      }, [role.value !== "model-change" && nameDatetimeDom, textLoading && (props2.animation === "skeleton" ? Vue.createVNode(skeleton_index.Skeleton, {
        "loading": textLoading,
        "animation": "gradient"
      }, null) : Vue.createVNode(chat_chatLoading["default"], {
        "loading": textLoading,
        "animation": props2.animation
      }, null)), !textLoading && Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__detail")
      }, [isObject.isObject(props2.reasoning) && Vue.createVNode(chat_chatReasoning["default"], {
        "role": role.value,
        "expandIconPlacement": props2.reasoning.expandIconPlacement,
        "onExpandChange": props2.reasoning.onExpandChange,
        "collapse-panel-props": _objectSpread({}, props2.reasoning.collapsePanelProps)
      }, null), isString.isString(props2.reasoning) && Vue.createVNode(chat_chatReasoning["default"], {
        "role": role.value,
        "expandIconPlacement": "right",
        "collapse-panel-props": {
          header: renderHeader(),
          content: Vue.createVNode(chat_chatContent["default"], {
            "isNormalText": false,
            "content": props2.reasoning,
            "role": role.value
          }, null)
        }
      }, null), isString.isString(content) ? Vue.createVNode(chat_chatContent["default"], {
        "isNormalText": false,
        "content": content,
        "role": role.value
      }, null) : content]), role.value === "assistant" && showActions.value && Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__actions-margin")
      }, [renderTNodeJSX("actions")])])]);
      return Vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__inner ").concat(roleValue, " ").concat(COMPONENT_NAME.value, "__text--variant--").concat(variant.value)
      }, [contentDom]);
    };
  }
});

exports["default"] = _ChatItem;
//# sourceMappingURL=chat-item.js.map
