/**
 * tdesign v1.12.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var dropdown_dropdownItem = require('./dropdown-item.js');
var dropdown_props = require('./props.js');
var divider_index = require('../divider/index.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var isFunction = require('../_chunks/dep-4bb500b8.js');
require('./dropdown-item-props.js');
require('../hooks/useRipple.js');
require('../hooks/useKeepAnimation.js');
require('../config-provider/hooks/useConfig.js');
require('../_chunks/dep-ede16f7f.js');
require('../_chunks/dep-1d38e864.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-75a87f7c.js');
require('dayjs');
require('../_chunks/dep-99110617.js');
require('../_chunks/dep-5e2171e6.js');
require('../_chunks/dep-ce3eb768.js');
require('../_chunks/dep-4479843a.js');
require('../_chunks/dep-fa2fda14.js');
require('../_chunks/dep-0e58cbbd.js');
require('../_chunks/dep-00f18931.js');
require('../_chunks/dep-84a0e81d.js');
require('../_chunks/dep-5247a460.js');
require('../_chunks/dep-a76126df.js');
require('../_chunks/dep-564b3613.js');
require('../_chunks/dep-11fc6f95.js');
require('../_chunks/dep-c3bc048f.js');
require('../_chunks/dep-58abd685.js');
require('../_chunks/dep-3a0b641f.js');
require('../_chunks/dep-e6692a32.js');
require('../_chunks/dep-10d5d599.js');
require('../_chunks/dep-41ef4b47.js');
require('../_chunks/dep-d0783150.js');
require('../_chunks/dep-9e87e1e1.js');
require('../_chunks/dep-fcea8340.js');
require('../_chunks/dep-2debdee8.js');
require('../_chunks/dep-1c142d75.js');
require('../_chunks/dep-c1b17346.js');
require('../_chunks/dep-94fa6b5d.js');
require('../_chunks/dep-12a3fd02.js');
require('../_chunks/dep-0290afd5.js');
require('../_chunks/dep-db9cff9c.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-3a1cfa95.js');
require('../_chunks/dep-6441bda0.js');
require('../_chunks/dep-54b7116c.js');
require('../_chunks/dep-36b83f83.js');
require('../_chunks/dep-e2633705.js');
require('../_chunks/dep-0b6e5f33.js');
require('../_chunks/dep-3c0d3dc9.js');
require('../_chunks/dep-5472dcbf.js');
require('../_chunks/dep-ce66c261.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('../_chunks/dep-6bdaf809.js');
require('../_chunks/dep-19f6d038.js');
require('../_chunks/dep-272b1445.js');
require('../divider/divider.js');
require('../divider/props.js');
require('../utils/withInstall.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _DropdownMenu = Vue.defineComponent({
  name: "TDropdownMenu",
  props: dropdown_props["default"],
  setup: function setup(props2) {
    var dropdownClass = hooks_useConfig.usePrefixClass("dropdown");
    var dropdownMenuClass = hooks_useConfig.usePrefixClass("dropdown__menu");
    var scrollTopMap = Vue.reactive({});
    var itemHeight = Vue.ref(null);
    var menuRef = Vue.ref();
    var isOverMaxHeight = Vue.ref(false);
    var _useGlobalIcon = hooks_useGlobalIcon.useGlobalIcon({
        ChevronRightIcon: tdesignIconsVueNext.ChevronRightIcon
      }),
      ChevronRightIcon = _useGlobalIcon.ChevronRightIcon;
    var handleItemClick = function handleItemClick(options) {
      var _data$onClick, _props2$onClick;
      var data = options.data,
        context = options.context;
      data === null || data === void 0 || (_data$onClick = data.onClick) === null || _data$onClick === void 0 || _data$onClick.call(data, data, context);
      (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 || _props2$onClick.call(props2, data, context);
    };
    var handleScroll = function handleScroll(e, deep) {
      var scrollTop = e.target.scrollTop;
      scrollTopMap[deep] = scrollTop;
    };
    Vue.onMounted(function () {
      if (menuRef.value) {
        var _window;
        var menuHeight = parseInt((_window = window) === null || _window === void 0 ? void 0 : _window.getComputedStyle(menuRef.value).height, 10);
        if (menuHeight >= props2.maxHeight) isOverMaxHeight.value = true;
      }
      itemHeight.value = document.querySelector(".".concat(dropdownClass.value, "__item")).scrollHeight + 2;
    });
    var getContent = function getContent(content) {
      if (isFunction.isFunction(content)) {
        return content(Vue.h);
      }
      return content;
    };
    var _renderOptions = function renderOptions(data, deep) {
      var _data$forEach;
      var arr = [];
      var renderContent;
      (_data$forEach = data.forEach) === null || _data$forEach === void 0 || _data$forEach.call(data, function (menu, idx) {
        var optionItem = _objectSpread({}, menu);
        var onViewIdx = idx - Math.ceil(scrollTopMap[deep] / itemHeight.value);
        var renderIdx = onViewIdx >= 0 ? onViewIdx : idx;
        if (optionItem.children) {
          optionItem.children = _renderOptions(optionItem.children, deep + 1);
          renderContent = Vue.createVNode("div", {
            "key": idx
          }, [Vue.createVNode(dropdown_dropdownItem["default"], {
            "style": optionItem.style,
            "class": ["".concat(dropdownClass.value, "__item"), "".concat(dropdownClass.value, "__item--suffix"), optionItem["class"]],
            "value": optionItem.value,
            "theme": optionItem.theme,
            "active": optionItem.active,
            "prefixIcon": optionItem.prefixIcon,
            "disabled": optionItem.disabled,
            "minColumnWidth": props2.minColumnWidth,
            "maxColumnWidth": props2.maxColumnWidth,
            "isSubmenu": true
          }, {
            "default": function _default() {
              return [Vue.createVNode("div", {
                "class": "".concat(dropdownClass.value, "__item-content")
              }, [Vue.createVNode("span", {
                "class": "".concat(dropdownClass.value, "__item-text")
              }, [getContent(optionItem.content)]), Vue.createVNode(ChevronRightIcon, {
                "class": "".concat(dropdownClass.value, "__item-direction"),
                "size": "16"
              }, null)]), Vue.createVNode("div", {
                "class": ["".concat(dropdownClass.value, "__submenu-wrapper"), _defineProperty__default["default"]({}, "".concat(dropdownClass.value, "__submenu-wrapper--").concat(props2.direction), props2.direction)],
                "style": {
                  position: "absolute",
                  top: "".concat(renderIdx * itemHeight.value, "px")
                }
              }, [Vue.createVNode("div", {
                "class": ["".concat(dropdownClass.value, "__submenu"), _defineProperty__default["default"]({}, "".concat(dropdownClass.value, "__submenu--disabled"), optionItem.disabled)],
                "style": {
                  position: "static",
                  maxHeight: "".concat(props2.maxHeight, "px")
                },
                "onScroll": function onScroll(e) {
                  return handleScroll(e, deep + 1);
                }
              }, [Vue.createVNode("ul", null, [optionItem.children])])])];
            }
          }), optionItem.divider ? Vue.createVNode(divider_index.Divider, null, null) : null]);
        } else {
          renderContent = Vue.createVNode("div", {
            "key": idx
          }, [Vue.createVNode(dropdown_dropdownItem["default"], {
            "style": optionItem.style,
            "class": ["".concat(dropdownClass.value, "__item"), optionItem["class"]],
            "value": optionItem.value,
            "theme": optionItem.theme,
            "active": optionItem.active,
            "prefixIcon": optionItem.prefixIcon,
            "disabled": optionItem.disabled,
            "minColumnWidth": props2.minColumnWidth,
            "maxColumnWidth": props2.maxColumnWidth,
            "onClick": optionItem.disabled || optionItem.children ? function () {
              return null;
            } : function (value, context) {
              return handleItemClick({
                data: optionItem,
                context: context
              });
            }
          }, {
            "default": function _default() {
              return [Vue.createVNode("span", {
                "class": "".concat(dropdownClass.value, "__item-text")
              }, [getContent(optionItem.content)])];
            }
          }), optionItem.divider ? Vue.createVNode(divider_index.Divider, null, null) : null]);
        }
        arr.push(renderContent);
      });
      return arr;
    };
    return function () {
      return Vue.createVNode("div", {
        "class": [dropdownMenuClass.value, "".concat(dropdownMenuClass.value, "--").concat(props2.direction), _defineProperty__default["default"]({}, "".concat(dropdownMenuClass.value, "--overflow"), isOverMaxHeight.value)],
        "style": {
          maxHeight: "".concat(props2.maxHeight, "px")
        },
        "ref": menuRef,
        "onScroll": function onScroll(e) {
          return handleScroll(e, 0);
        }
      }, [_renderOptions(props2.options, 0)]);
    };
  }
});

exports["default"] = _DropdownMenu;
//# sourceMappingURL=dropdown-menu.js.map
