/**
 * tdesign v1.12.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var popup_index = require('../popup/index.js');
var selectInput_props = require('./props.js');
var selectInput_hooks_useMultiple = require('./hooks/useMultiple.js');
var selectInput_hooks_useOverlayInnerStyle = require('./hooks/useOverlayInnerStyle.js');
var selectInput_hooks_useSingle = require('./hooks/useSingle.js');
var hooks_useConfig = require('../hooks/useConfig.js');
require('@babel/runtime/helpers/typeof');
var hooks_tnode = require('../_chunks/dep-db9cff9c.js');
require('../hooks/useKeepAnimation.js');
require('../popup/popup.js');
require('@popperjs/core');
require('../_chunks/dep-0290afd5.js');
require('../hooks/useVModel.js');
require('../_chunks/dep-3c0d3dc9.js');
require('../_chunks/dep-0b6e5f33.js');
require('../_chunks/dep-6441bda0.js');
require('../_chunks/dep-fa2fda14.js');
require('../_chunks/dep-a76126df.js');
require('../_chunks/dep-54b7116c.js');
require('../_chunks/dep-5247a460.js');
require('../utils/dom.js');
require('../_chunks/dep-75a87f7c.js');
require('../_chunks/dep-4bb500b8.js');
require('../_chunks/dep-0e58cbbd.js');
require('../_chunks/dep-12a3fd02.js');
require('../popup/container.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../popup/props.js');
require('../hooks/useResizeObserver.js');
require('../_chunks/dep-7f787fb7.js');
require('../_chunks/dep-b5ec465c.js');
require('../utils/withInstall.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-3a1cfa95.js');
require('../_chunks/dep-36b83f83.js');
require('../_chunks/dep-e2633705.js');
require('../_chunks/dep-5472dcbf.js');
require('../_chunks/dep-1c142d75.js');
require('../_chunks/dep-564b3613.js');
require('../_chunks/dep-11fc6f95.js');
require('../_chunks/dep-c3bc048f.js');
require('../_chunks/dep-4479843a.js');
require('../_chunks/dep-c1b17346.js');
require('../_chunks/dep-84a0e81d.js');
require('../config-provider/hooks/useConfig.js');
require('../_chunks/dep-ede16f7f.js');
require('../_chunks/dep-1d38e864.js');
require('dayjs');
require('../_chunks/dep-99110617.js');
require('../_chunks/dep-5e2171e6.js');
require('../_chunks/dep-ce3eb768.js');
require('../_chunks/dep-00f18931.js');
require('../_chunks/dep-58abd685.js');
require('../_chunks/dep-3a0b641f.js');
require('../_chunks/dep-e6692a32.js');
require('../_chunks/dep-10d5d599.js');
require('../_chunks/dep-41ef4b47.js');
require('../_chunks/dep-d0783150.js');
require('../_chunks/dep-9e87e1e1.js');
require('../_chunks/dep-fcea8340.js');
require('../_chunks/dep-2debdee8.js');
require('../_chunks/dep-94fa6b5d.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../tag-input/index.js');
require('../tag-input/tag-input.js');
require('tdesign-icons-vue-next');
require('../input/index.js');
require('../input/input.js');
require('../input/props.js');
require('../hooks/useDisabled.js');
require('../_chunks/dep-1e4a8214.js');
require('../hooks/useReadonly.js');
require('../hooks/useGlobalIcon.js');
require('../input/hooks/useInput.js');
require('../form/consts/index.js');
require('../input/hooks/useLengthLimit.js');
require('../_chunks/dep-7bb1a236.js');
require('../_chunks/dep-ce66c261.js');
require('../_chunks/dep-6bdaf809.js');
require('../_chunks/dep-19f6d038.js');
require('../_chunks/dep-272b1445.js');
require('../input/hooks/useInputEventHandler.js');
require('../input/hooks/useInputWidth.js');
require('../input/input-group.js');
require('../input/input-group-props.js');
require('../tag-input/props.js');
require('../tag-input/hooks/useDragSorter.js');
require('../tag-input/hooks/useHover.js');
require('../tag-input/hooks/useTagScroll.js');
require('../tag-input/hooks/useTagList.js');
require('../tag/index.js');
require('../tag/tag.js');
require('tinycolor2');
require('../tag/props.js');
require('../tag/check-tag.js');
require('../tag/check-tag-props.js');
require('../_chunks/dep-d1e9ac5b.js');
require('../tag/check-tag-group.js');
require('../tag/check-tag-group-props.js');
require('../hooks/useDefaultValue.js');
require('../loading/index.js');
require('../_chunks/dep-14125703.js');
require('../loading/plugin.js');
require('../loading/loading.js');
require('../loading/icon/gradient.js');
require('../hooks/useTeleport.js');
require('../loading/props.js');
require('../_chunks/dep-9ab88918.js');
require('../_chunks/dep-425a3c77.js');
require('../_chunks/dep-449af6ce.js');
require('../_chunks/dep-13bdf55b.js');
require('../_chunks/dep-f0a744e5.js');
require('../_chunks/dep-c8867018.js');
require('../_chunks/dep-350b64b1.js');
require('../_chunks/dep-e88b64f3.js');
require('../_chunks/dep-803e78c6.js');
require('../_chunks/dep-dee45c79.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var useComponentClassName = function useComponentClassName() {
  return {
    NAME_CLASS: hooks_useConfig.usePrefixClass("select-input"),
    BASE_CLASS_BORDERLESS: hooks_useConfig.usePrefixClass("select-input--borderless"),
    BASE_CLASS_MULTIPLE: hooks_useConfig.usePrefixClass("select-input--multiple"),
    BASE_CLASS_POPUP_VISIBLE: hooks_useConfig.usePrefixClass("select-input--popup-visible"),
    BASE_CLASS_EMPTY: hooks_useConfig.usePrefixClass("select-input--empty")
  };
};
var _SelectInput = Vue.defineComponent({
  name: "TSelectInput",
  props: _objectSpread(_objectSpread({}, selectInput_props["default"]), {}, {
    valueDisplayOptions: {
      type: Object
    }
  }),
  setup: function setup(props2, context) {
    var _useComponentClassNam = useComponentClassName(),
      NAME_CLASS = _useComponentClassNam.NAME_CLASS,
      BASE_CLASS_BORDERLESS = _useComponentClassNam.BASE_CLASS_BORDERLESS,
      BASE_CLASS_MULTIPLE = _useComponentClassNam.BASE_CLASS_MULTIPLE,
      BASE_CLASS_POPUP_VISIBLE = _useComponentClassNam.BASE_CLASS_POPUP_VISIBLE,
      BASE_CLASS_EMPTY = _useComponentClassNam.BASE_CLASS_EMPTY;
    var classPrefix = hooks_useConfig.usePrefixClass();
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var selectInputRef = Vue.ref();
    var popupRef = Vue.ref();
    var _toRefs = Vue.toRefs(props2),
      multiple = _toRefs.multiple,
      value = _toRefs.value,
      popupVisible = _toRefs.popupVisible,
      borderless = _toRefs.borderless,
      popupProps = _toRefs.popupProps,
      panel = _toRefs.panel,
      allowInput = _toRefs.allowInput,
      status = _toRefs.status;
    var _useOverlayInnerStyle = selectInput_hooks_useOverlayInnerStyle.useOverlayInnerStyle(props2),
      tOverlayInnerStyle = _useOverlayInnerStyle.tOverlayInnerStyle,
      innerPopupVisible = _useOverlayInnerStyle.innerPopupVisible,
      onInnerPopupVisibleChange = _useOverlayInnerStyle.onInnerPopupVisibleChange;
    var _useSingle = selectInput_hooks_useSingle.useSingle(props2, context, popupRef),
      isSingleFocus = _useSingle.isSingleFocus,
      commonInputProps = _useSingle.commonInputProps,
      onInnerClear = _useSingle.onInnerClear,
      renderSelectSingle = _useSingle.renderSelectSingle;
    var _useMultiple = selectInput_hooks_useMultiple.useMultiple(props2, context, popupRef),
      isMultipleFocus = _useMultiple.isMultipleFocus,
      tagInputRef = _useMultiple.tagInputRef,
      renderSelectMultiple = _useMultiple.renderSelectMultiple;
    var isFocus = Vue.computed(function () {
      return props2.multiple ? isMultipleFocus.value : isSingleFocus.value;
    });
    var classes = Vue.computed(function () {
      var _popupVisible$value;
      return ["".concat(NAME_CLASS.value), _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, BASE_CLASS_MULTIPLE.value, multiple.value), BASE_CLASS_BORDERLESS.value, borderless.value), BASE_CLASS_POPUP_VISIBLE.value, (_popupVisible$value = popupVisible.value) !== null && _popupVisible$value !== void 0 ? _popupVisible$value : innerPopupVisible.value), BASE_CLASS_EMPTY.value, value.value instanceof Array ? !value.value.length : !value.value)];
    });
    var addKeyboardEventListener = function addKeyboardEventListener(e) {
      var _e$key;
      var code = e.code || ((_e$key = e.key) === null || _e$key === void 0 ? void 0 : _e$key.trim());
      if (/(ArrowDown|ArrowUp)/.test(code) && !popupVisible.value) {
        var _props2$onPopupVisibl;
        var ctx = _objectSpread(_objectSpread({}, context), {}, {
          trigger: "trigger-element-focus"
        });
        (_props2$onPopupVisibl = props2.onPopupVisibleChange) === null || _props2$onPopupVisibl === void 0 || _props2$onPopupVisibl.call(props2, true, ctx);
      }
    };
    Vue.watch([isFocus], function (_ref2) {
      var _ref3 = _slicedToArray__default["default"](_ref2, 1),
        isFocus2 = _ref3[0];
      if (popupVisible.value) return;
      if (isFocus2) {
        selectInputRef.value.addEventListener("keydown", addKeyboardEventListener);
      } else {
        selectInputRef.value.removeEventListener("keydown", addKeyboardEventListener);
      }
    });
    Vue.onMounted(function () {
      if (!popupVisible.value && isFocus) {
        selectInputRef.value.addEventListener("keydown", addKeyboardEventListener);
      }
    });
    Vue.onBeforeUnmount(function () {
      var _selectInputRef$value;
      (_selectInputRef$value = selectInputRef.value) === null || _selectInputRef$value === void 0 || _selectInputRef$value.removeEventListener("keydown", addKeyboardEventListener);
    });
    var onOverlayClick = function onOverlayClick(ctx) {
      var _ctx$e, _tagInputRef$value, _tagInputRef$value$fo;
      (_ctx$e = ctx.e) === null || _ctx$e === void 0 || _ctx$e.stopPropagation();
      if (ctx.e.target.tabIndex >= 0) return;
      if (props2.multiple) (_tagInputRef$value = tagInputRef.value) === null || _tagInputRef$value === void 0 || (_tagInputRef$value$fo = _tagInputRef$value.focus) === null || _tagInputRef$value$fo === void 0 || _tagInputRef$value$fo.call(_tagInputRef$value);
    };
    context.expose({
      popupRef: popupRef,
      allowInput: allowInput
    });
    return function () {
      var _popupVisible$value2, _popupProps$value;
      var visibleProps = {
        visible: (_popupVisible$value2 = popupVisible.value) !== null && _popupVisible$value2 !== void 0 ? _popupVisible$value2 : innerPopupVisible.value
      };
      var mainContent = Vue.createVNode(popup_index.Popup, Vue.mergeProps({
        "ref": popupRef,
        "trigger": ((_popupProps$value = popupProps.value) === null || _popupProps$value === void 0 ? void 0 : _popupProps$value.trigger) || "click",
        "placement": "bottom-left"
      }, visibleProps, {
        "content": panel.value,
        "hideEmptyPopup": true
      }, _objectSpread(_objectSpread({
        onVisibleChange: onInnerPopupVisibleChange,
        onOverlayClick: onOverlayClick
      }, popupProps.value), {}, {
        overlayInnerStyle: tOverlayInnerStyle.value
      })), _objectSpread({
        "default": function _default() {
          return [multiple.value ? renderSelectMultiple({
            commonInputProps: commonInputProps.value,
            onInnerClear: onInnerClear,
            popupVisible: visibleProps.visible,
            allowInput: allowInput.value
          }) : renderSelectSingle(visibleProps.visible)];
        }
      }, _objectSpread(_objectSpread({}, context.slots), {}, {
        content: context.slots.panel
      })));
      var tipsNode = renderTNodeJSX("tips");
      var tipsClasses = ["".concat(classPrefix.value, "-input__tips"), "".concat(classPrefix.value, "-tips"), "".concat(classPrefix.value, "-is-").concat(status.value)];
      return Vue.createVNode("div", {
        "ref": selectInputRef,
        "class": classes.value
      }, [mainContent, tipsNode && Vue.createVNode("div", {
        "class": tipsClasses
      }, [tipsNode])]);
    };
  }
});

exports["default"] = _SelectInput;
//# sourceMappingURL=select-input.js.map
