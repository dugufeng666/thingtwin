/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var constants = require('../../../_chunks/dep-b16531ed.js');
var color = require('../../../_chunks/dep-271175a4.js');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/toConsumableArray');
var inputNumber_index = require('../../../input-number/index.js');
var colorPicker_hooks_index = require('../../hooks/index.js');
var hooks_useConfig = require('../../../hooks/useConfig.js');
var colorPicker_components_panel_baseProps = require('./base-props.js');
var cloneDeep = require('../../../_chunks/dep-7279283f.js');
require('@babel/runtime/helpers/slicedToArray');
require('tinycolor2');
require('../../../_chunks/dep-96341f20.js');
require('../../../_chunks/dep-39c9581c.js');
require('@babel/runtime/helpers/typeof');
require('../../../_chunks/dep-d7a38fb3.js');
require('../../../_chunks/dep-3b62827f.js');
require('../../../_chunks/dep-a8fcbdcc.js');
require('../../../input-number/input-number.js');
require('tdesign-icons-vue-next');
require('../../../button/index.js');
require('../../../button/button.js');
require('../../../loading/index.js');
require('../../../_chunks/dep-6f7850dd.js');
require('../../../loading/plugin.js');
require('../../../loading/loading.js');
require('../../../loading/icon/gradient.js');
require('../../../_chunks/dep-00dea1d2.js');
require('../../../_chunks/dep-ec4a2dad.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../../_chunks/dep-ceab8f85.js');
require('../../../_chunks/dep-ec389751.js');
require('../../../config-provider/hooks/useConfig.js');
require('../../../_chunks/dep-47100b3a.js');
require('../../../_chunks/dep-687d9447.js');
require('../../../_chunks/dep-84fc4531.js');
require('dayjs');
require('../../../_chunks/dep-22d9d967.js');
require('../../../_chunks/dep-98fbf983.js');
require('../../../_chunks/dep-5590274c.js');
require('../../../_chunks/dep-104f7ee1.js');
require('../../../_chunks/dep-c94b540e.js');
require('../../../_chunks/dep-f022423f.js');
require('../../../_chunks/dep-a929bdb8.js');
require('../../../_chunks/dep-00397a41.js');
require('../../../_chunks/dep-92c5e4a5.js');
require('../../../_chunks/dep-78a63892.js');
require('../../../_chunks/dep-5d64466b.js');
require('../../../_chunks/dep-689071d2.js');
require('../../../_chunks/dep-edc40e94.js');
require('../../../_chunks/dep-2ce2286c.js');
require('../../../_chunks/dep-bb55dbeb.js');
require('../../../_chunks/dep-e5e0508f.js');
require('../../../_chunks/dep-8a241271.js');
require('../../../_chunks/dep-c7e11941.js');
require('../../../_chunks/dep-08fa391e.js');
require('../../../_chunks/dep-565984b5.js');
require('../../../_chunks/dep-e7786719.js');
require('../../../_chunks/dep-2963fcd8.js');
require('../../../utils/dom.js');
require('../../../_chunks/dep-8fa35315.js');
require('../../../utils/render-tnode.js');
require('../../../_chunks/dep-9f078572.js');
require('../../../_chunks/dep-7fc1ffe2.js');
require('../../../_chunks/dep-b1f64980.js');
require('../../../_chunks/dep-29224a9c.js');
require('../../../_chunks/dep-5ae95903.js');
require('../../../_chunks/dep-8675a24d.js');
require('../../../_chunks/dep-25e6caa1.js');
require('../../../_chunks/dep-53ee0c65.js');
require('../../../hooks/useTeleport.js');
require('../../../loading/props.js');
require('../../../_chunks/dep-01fce6ff.js');
require('../../../_chunks/dep-2766940c.js');
require('../../../_chunks/dep-c6b053f2.js');
require('../../../_chunks/dep-3d3d9813.js');
require('../../../_chunks/dep-69e83dde.js');
require('../../../_chunks/dep-290797fe.js');
require('../../../_chunks/dep-f92d0863.js');
require('../../../utils/withInstall.js');
require('../../../button/props.js');
require('../../../hooks/useRipple.js');
require('../../../hooks/useKeepAnimation.js');
require('../../../hooks/useDisabled.js');
require('../../../_chunks/dep-b12afab7.js');
require('../../../input/index.js');
require('../../../input/input.js');
require('../../../input/props.js');
require('../../../hooks/useReadonly.js');
require('../../../hooks/useGlobalIcon.js');
require('../../../input/hooks/useInput.js');
require('../../../form/consts/index.js');
require('../../../hooks/useVModel.js');
require('../../../input/hooks/useLengthLimit.js');
require('../../../_chunks/dep-94e74ea7.js');
require('../../../input/hooks/useInputEventHandler.js');
require('../../../input/hooks/useInputWidth.js');
require('../../../hooks/useResizeObserver.js');
require('../../../input/input-group.js');
require('../../../input/input-group-props.js');
require('../../../input-number/props.js');
require('../../../input-number/hooks/useInputNumber.js');
require('../../../hooks/useCommonClassName.js');
require('../../../_chunks/dep-76591ab3.js');
require('../../../_chunks/dep-46f42510.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var DELETE_KEYS = ["delete", "backspace"];
var LinearGradient = Vue.defineComponent({
  name: "LinearGradient",
  inheritAttrs: false,
  props: _objectSpread(_objectSpread({}, colorPicker_components_panel_baseProps["default"]), {}, {
    enableMultipleGradient: {
      type: Boolean,
      "default": true
    }
  }),
  setup: function setup(props) {
    var baseClassName = colorPicker_hooks_index.useBaseClassName();
    var _useCommonClassName = hooks_useConfig.useCommonClassName(),
      STATUS = _useCommonClassName.STATUS;
    var statusClassNames = STATUS.value;
    var refSlider = Vue.ref(null);
    var sliderRect = Vue.reactive({
      left: 0,
      width: constants.GRADIENT_SLIDER_DEFAULT_WIDTH
    });
    var isDragging = Vue.ref(false);
    var isMoved = Vue.ref(false);
    var degree = Vue.ref(props.color.gradientDegree);
    var selectedId = Vue.ref(props.color.gradientSelectedId);
    var colors = Vue.ref(cloneDeep.cloneDeep(props.color.gradientColors));
    Vue.watch(function () {
      return props.color.gradientDegree;
    }, function (value) {
      return degree.value = value;
    });
    Vue.watch(function () {
      return props.color.gradientSelectedId;
    }, function (value) {
      return selectedId.value = value;
    });
    Vue.watch(function () {
      return props.color.gradientColors;
    }, function (value) {
      colors.value = cloneDeep.cloneDeep(value);
    }, {
      deep: true
    });
    var handleChange = function handleChange(key, payload, addUsedColor) {
      if (props.disabled) {
        return;
      }
      props.onChange({
        key: key,
        payload: payload,
        addUsedColor: addUsedColor
      });
    };
    var handleDegreeChange = function handleDegreeChange(value) {
      if (props.disabled || value === props.color.gradientDegree) {
        return;
      }
      degree.value = value;
      handleChange("degree", value, true);
    };
    var handleSelectedIdChange = function handleSelectedIdChange(value) {
      if (props.disabled) {
        return;
      }
      selectedId.value = value;
      handleChange("selectedId", value);
    };
    var handleColorsChange = function handleColorsChange(value, isEnded) {
      if (props.disabled) {
        return;
      }
      colors.value = value;
      handleChange("colors", value, isEnded);
    };
    var updateActiveThumbLeft = function updateActiveThumbLeft(left) {
      var index = colors.value.findIndex(function (c) {
        return c.id === selectedId.value;
      });
      if (index === -1) {
        return;
      }
      var point = colors.value[index];
      left = Math.max(0, Math.min(sliderRect.width, left));
      var percentLeft = left / sliderRect.width * 100;
      colors.value.splice(index, 1, {
        color: point.color,
        left: percentLeft,
        id: point.id
      });
      handleColorsChange(colors.value);
    };
    var handleStart = function handleStart(id) {
      var rect = refSlider.value.getBoundingClientRect();
      sliderRect.left = rect.left;
      sliderRect.width = rect.width || constants.GRADIENT_SLIDER_DEFAULT_WIDTH;
      if (isDragging.value || props.disabled) {
        return;
      }
      isMoved.value = false;
      isDragging.value = true;
      handleSelectedIdChange(id);
      refSlider.value.focus();
      window.addEventListener("mousemove", handleMove, false);
      window.addEventListener("mouseup", _handleEnd, false);
      window.addEventListener("contextmenu", _handleEnd, false);
    };
    var handleMove = function handleMove(e) {
      if (!isDragging.value || props.disabled) {
        return;
      }
      var left = e.clientX - sliderRect.left;
      isMoved.value = true;
      updateActiveThumbLeft(left);
    };
    var _handleEnd = function handleEnd() {
      if (!isDragging.value) {
        return;
      }
      setTimeout(function () {
        isDragging.value = false;
      }, 0);
      if (isMoved.value) {
        handleColorsChange(colors.value, true);
        isMoved.value = false;
      }
      window.removeEventListener("mousemove", handleMove, false);
      window.removeEventListener("mouseup", _handleEnd, false);
      window.removeEventListener("contextmenu", _handleEnd, false);
    };
    var handleKeyup = function handleKeyup(e) {
      if (props.disabled) {
        return;
      }
      var points = colors.value;
      var pos = points.findIndex(function (c) {
        return c.id === selectedId.value;
      });
      var length = points.length;
      if (DELETE_KEYS.includes(e.key.toLocaleLowerCase()) && length > 2 && pos >= 0 && pos <= length - 1) {
        points.splice(pos, 1);
        if (!points[pos]) {
          pos = points[pos + 1] ? pos + 1 : points[pos - 1] ? pos - 1 : 0;
        }
        var current = points[pos];
        handleColorsChange(points, true);
        handleSelectedIdChange(current === null || current === void 0 ? void 0 : current.id);
      }
    };
    var handleThumbBarClick = function handleThumbBarClick(e) {
      if (props.disabled || !props.enableMultipleGradient) {
        return;
      }
      var left = e.clientX - sliderRect.left;
      left = Math.max(0, Math.min(sliderRect.width, left));
      var percentLeft = left / sliderRect.width * 100;
      var newPoint = color.genGradientPoint(percentLeft, props.color.rgba);
      colors.value.push(newPoint);
      handleColorsChange(colors.value, true);
      handleSelectedIdChange(newPoint.id);
    };
    Vue.onMounted(function () {
      var rect = refSlider.value.getBoundingClientRect();
      sliderRect.left = rect.left;
      sliderRect.width = rect.width || constants.GRADIENT_SLIDER_DEFAULT_WIDTH;
    });
    Vue.onBeforeUnmount(function () {
      window.removeEventListener("mousemove", handleMove, false);
      window.removeEventListener("mouseup", _handleEnd, false);
      window.removeEventListener("contextmenu", _handleEnd, false);
    });
    return function () {
      var _props$color = props.color,
        linearGradient = _props$color.linearGradient,
        gradientColors = _props$color.gradientColors;
      var thumbBackground = color.gradientColors2string({
        points: gradientColors,
        degree: 90
      });
      return Vue.createVNode("div", {
        "class": "".concat(baseClassName.value, "__gradient")
      }, [Vue.createVNode("div", {
        "class": "".concat(baseClassName.value, "__gradient-slider")
      }, [Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__slider"), "".concat(baseClassName.value, "--bg-alpha")],
        "onKeyup": handleKeyup,
        "tabindex": 0,
        "ref": refSlider
      }, [Vue.createVNode("ul", {
        "class": "gradient-thumbs",
        "onClick": handleThumbBarClick,
        "style": {
          background: thumbBackground
        }
      }, [colors.value.map(function (t) {
        var left = "".concat(Math.round(t.left * 100) / 100, "%");
        return Vue.createVNode("li", {
          "class": ["".concat(baseClassName.value, "__thumb"), "gradient-thumbs__item", selectedId.value === t.id ? statusClassNames.active : ""],
          "key": t.id,
          "title": "".concat(t.color, " ").concat(left),
          "style": {
            color: t.color,
            left: left
          },
          "onClick": function onClick(e) {
            return e.stopPropagation();
          },
          "onMousedown": function onMousedown() {
            return handleStart(t.id);
          }
        }, [Vue.createVNode("span", {
          "class": ["gradient-thumbs__item-inner", "".concat(baseClassName.value, "--bg-alpha")]
        }, null)]);
      })])])]), Vue.createVNode("div", {
        "class": "".concat(baseClassName.value, "__gradient-degree"),
        "title": "".concat(degree.value, "deg")
      }, [Vue.createVNode(inputNumber_index.InputNumber, {
        "size": "small",
        "theme": "normal",
        "min": 0,
        "max": 360,
        "step": 1,
        "format": function format(value) {
          return "".concat(value, "\xB0");
        },
        "modelValue": degree.value,
        "onUpdate:modelValue": function onUpdateModelValue($event) {
          return degree.value = $event;
        },
        "onBlur": handleDegreeChange,
        "onEnter": handleDegreeChange,
        "disabled": props.disabled
      }, null)]), Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__gradient-preview"), "".concat(baseClassName.value, "--bg-alpha")]
      }, [Vue.createVNode("span", {
        "class": "preview-inner",
        "style": {
          background: linearGradient
        }
      }, null)])]);
    };
  }
});

exports["default"] = LinearGradient;
//# sourceMappingURL=linear-gradient.js.map
