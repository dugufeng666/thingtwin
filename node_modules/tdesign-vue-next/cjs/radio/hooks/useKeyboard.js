/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var utils_dom = require('../../utils/dom.js');
var common = require('../../_chunks/dep-1cf0bd44.js');
var isString = require('../../_chunks/dep-96341f20.js');
require('../../_chunks/dep-84fc4531.js');
require('../../_chunks/dep-c94b540e.js');
require('../../_chunks/dep-39c9581c.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-f022423f.js');
require('../../_chunks/dep-d7a38fb3.js');
require('../../_chunks/dep-3b62827f.js');

function useKeyboard(radioGroupRef, setInnerValue) {
  var checkRadioInGroup = function checkRadioInGroup(e) {
    var inputNode = e.target.querySelector("input");
    if (!inputNode) return;
    var isCheckedCode = common.CHECKED_CODE_REG.test(e.key) || common.CHECKED_CODE_REG.test(e.code);
    if (isCheckedCode) {
      e.preventDefault();
      var data = inputNode.dataset;
      if (inputNode.checked && data.allowUncheck) {
        setInnerValue(void 0, {
          e: e
        });
      } else {
        var value = !isNaN(Number(data.value)) ? Number(data.value) : data.value;
        value = isString.isString(value) && {
          "true": true,
          "false": false
        }[value] || value;
        value = isString.isString(value) && value[0] === "'" ? value.replace(/'/g, "") : value;
        setInnerValue(value, {
          e: e
        });
      }
    }
  };
  Vue.onMounted(function () {
    utils_dom.on(radioGroupRef.value, "keydown", checkRadioInGroup);
  });
  Vue.onBeforeMount(function () {
    utils_dom.off(radioGroupRef.value, "keydown", checkRadioInGroup);
  });
}

exports.useKeyboard = useKeyboard;
//# sourceMappingURL=useKeyboard.js.map
