/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import _slicedToArray from '@babel/runtime/helpers/slicedToArray';
import { defineComponent, ref, toRefs, createVNode, mergeProps } from 'vue';
import useDefaultValue from '../hooks/useDefaultValue.js';
import useVModel from '../hooks/useVModel.js';
import { b as useTNodeDefault } from '../_chunks/dep-b668a2a6.js';
import props from './props.js';
import { Popup } from '../popup/index.js';
import ColorPanel from './components/panel/index.js';
import DefaultTrigger from './components/trigger/index.js';
import { useBaseClassName } from './hooks/index.js';
import 'lodash-es';
import '../utils/render-tnode.js';
import '../popup/popup.js';
import '@popperjs/core';
import '@babel/runtime/helpers/toConsumableArray';
import '@babel/runtime/helpers/typeof';
import '../hooks/useConfig.js';
import '../config-provider/hooks/useConfig.js';
import '../config-provider/utils/context.js';
import '../_chunks/dep-b296c28c.js';
import '../_chunks/dep-d5ba1b57.js';
import 'dayjs';
import '../hooks/useKeepAnimation.js';
import '../_chunks/dep-1614d661.js';
import '../utils/dom.js';
import '../popup/container.js';
import '../popup/props.js';
import '../hooks/useResizeObserver.js';
import '../utils/withInstall.js';
import '../_chunks/dep-60b624fa.js';
import '@babel/runtime/helpers/classCallCheck';
import '@babel/runtime/helpers/createClass';
import 'tinycolor2';
import '../_chunks/dep-f632a980.js';
import '../_chunks/dep-926171ee.js';
import './components/panel/header.js';
import '../radio/index.js';
import '../radio/radio.js';
import '../radio/props.js';
import '../radio/consts/index.js';
import '../hooks/useDisabled.js';
import '../hooks/useReadonly.js';
import '../_chunks/dep-4eefc93a.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../radio/group.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '../radio/radio-group-props.js';
import '../radio/radio-button.js';
import '../radio/hooks/useKeyboard.js';
import '../_chunks/dep-c1958f59.js';
import '../watermark/hooks/index.js';
import './components/panel/linear-gradient.js';
import '../input-number/index.js';
import '../input-number/input-number.js';
import 'tdesign-icons-vue-next';
import '../button/index.js';
import '../button/button.js';
import '../loading/index.js';
import '../loading/directive.js';
import '../loading/plugin.js';
import '../loading/loading.js';
import '../loading/icon/gradient.js';
import '../hooks/useTeleport.js';
import '../loading/props.js';
import '../button/props.js';
import '../hooks/useRipple.js';
import '../input/index.js';
import '../input/input.js';
import '../input/props.js';
import '../hooks/useGlobalIcon.js';
import '../input/hooks/useInput.js';
import '../form/consts/index.js';
import '../input/hooks/useLengthLimit.js';
import '../_chunks/dep-988f7f09.js';
import '../input/hooks/useInputEventHandler.js';
import '../input/hooks/useInputWidth.js';
import '../input/input-group.js';
import '../input/input-group-props.js';
import '../input-number/props.js';
import '../input-number/hooks/useInputNumber.js';
import '../hooks/useCommonClassName.js';
import '../_chunks/dep-d13c9d84.js';
import '../_chunks/dep-88ea6f3b.js';
import './components/panel/base-props.js';
import './components/panel/saturation.js';
import '../_chunks/dep-dc0cda51.js';
import './components/panel/hue.js';
import './components/panel/slider.js';
import './components/panel/alpha.js';
import './components/format/index.js';
import '../select/index.js';
import '../select/select.js';
import '../common-components/fake-arrow.js';
import '../select-input/index.js';
import '../select-input/select-input.js';
import '../select-input/props.js';
import '../select-input/hooks/useMultiple.js';
import '../tag-input/index.js';
import '../tag-input/tag-input.js';
import '../tag-input/props.js';
import '../tag-input/hooks/useDragSorter.js';
import '../tag-input/hooks/useHover.js';
import '../tag-input/hooks/useTagScroll.js';
import '../tag-input/hooks/useTagList.js';
import '../tag/index.js';
import '../tag/tag.js';
import '../tag/props.js';
import '../tag/check-tag.js';
import '../tag/check-tag-props.js';
import '../tag/check-tag-group.js';
import '../tag/check-tag-group-props.js';
import '../select-input/hooks/useOverlayInnerStyle.js';
import '../select-input/hooks/useSingle.js';
import '../select/select-panel.js';
import '../select/option.js';
import '../select/option-props.js';
import '../checkbox/index.js';
import '../checkbox/checkbox.js';
import '../checkbox/props.js';
import '../checkbox/consts/index.js';
import '../checkbox/hooks/useCheckboxLazyLoad.js';
import '../_chunks/dep-f1a418d4.js';
import '../checkbox/hooks/useKeyboardEvent.js';
import '../checkbox/group.js';
import '../checkbox/checkbox-group-props.js';
import '../hooks/slot.js';
import '../select/utils/index.js';
import '../select/consts/index.js';
import '../select/option-group.js';
import '../select/option-group-props.js';
import '../select/props.js';
import '../select/hooks/usePanelVirtualScroll.js';
import '../hooks/useVirtualScroll.js';
import '../select/hooks/useKeyboardControl.js';
import '../select/hooks/useSelectOptions.js';
import './components/format/inputs.js';
import './components/panel/swatches.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _ColorPicker = defineComponent({
  name: "TColorPicker",
  props: props,
  setup: function setup(props2) {
    var baseClassName = useBaseClassName();
    var renderTNodeJSXDefault = useTNodeDefault();
    var visible = ref(false);
    var setVisible = function setVisible(value) {
      return visible.value = value;
    };
    var _toRefs = toRefs(props2),
      inputValue = _toRefs.value,
      modelValue = _toRefs.modelValue,
      recentColors = _toRefs.recentColors;
    var _useVModel = useVModel(inputValue, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      innerValue = _useVModel2[0],
      setInnerValue = _useVModel2[1];
    var _useDefaultValue = useDefaultValue(recentColors, props2.defaultRecentColors, props2.onRecentColorsChange, "recentColors"),
      _useDefaultValue2 = _slicedToArray(_useDefaultValue, 2),
      innerRecentColors = _useDefaultValue2[0],
      setInnerRecentColors = _useDefaultValue2[1];
    var refTrigger = ref();
    var handleClear = function handleClear(context) {
      var _props2$onClear;
      return (_props2$onClear = props2.onClear) === null || _props2$onClear === void 0 ? void 0 : _props2$onClear.call(props2, context);
    };
    var renderPopupContent = function renderPopupContent() {
      if (props2.disabled) {
        return null;
      }
      return createVNode(ColorPanel, mergeProps(props2, {
        "value": innerValue.value,
        "recentColors": innerRecentColors.value,
        "onChange": setInnerValue,
        "onRecentColorsChange": setInnerRecentColors
      }), null);
    };
    return function () {
      var popProps = _objectSpread(_objectSpread({
        placement: "bottom-left"
      }, props2.popupProps || {}), {}, {
        trigger: "click",
        attach: "body",
        overlayClassName: [baseClassName.value],
        visible: visible.value,
        overlayInnerStyle: {
          padding: 0
        },
        onVisibleChange: function onVisibleChange(visible2, context) {
          if (context.trigger === "document") {
            setVisible(false);
          }
        }
      });
      return createVNode(Popup, mergeProps(popProps, {
        "content": renderPopupContent
      }), {
        "default": function _default() {
          return [createVNode("div", {
            "class": "".concat(baseClassName.value, "__trigger"),
            "onClick": function onClick() {
              return setVisible(!visible.value);
            },
            "ref": refTrigger
          }, [renderTNodeJSXDefault("default", createVNode(DefaultTrigger, {
            "borderless": props2.borderless,
            "color": innerValue.value,
            "disabled": props2.disabled,
            "clearable": props2.clearable,
            "input-props": props2.inputProps,
            "onTriggerChange": setInnerValue,
            "onTriggerClear": handleClear,
            "size": props2.size
          }, null))])];
        }
      });
    };
  }
});

export { _ColorPicker as default };
//# sourceMappingURL=color-picker.js.map
