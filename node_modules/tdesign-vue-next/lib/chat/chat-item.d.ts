declare const _default: import("vue").DefineComponent<{
    reasoningLoading: {
        type: BooleanConstructor;
        default: boolean;
    };
    actions: {
        type: import("vue").PropType<import("./type").TdChatItemProps["actions"]>;
    };
    animation: {
        type: import("vue").PropType<import("./type").TdChatItemProps["animation"]>;
        default: import("./type").TdChatItemProps["animation"];
        validator(val: import("./type").TdChatItemProps["animation"]): boolean;
    };
    avatar: {
        type: import("vue").PropType<import("./type").TdChatItemProps["avatar"]>;
    };
    content: {
        type: import("vue").PropType<import("./type").TdChatItemProps["content"]>;
    };
    datetime: {
        type: import("vue").PropType<import("./type").TdChatItemProps["datetime"]>;
    };
    name: {
        type: import("vue").PropType<import("./type").TdChatItemProps["name"]>;
    };
    reasoning: {
        type: import("vue").PropType<import("./type").TdChatItemProps["reasoning"]>;
        default: import("./type").TdChatItemProps["reasoning"];
    };
    role: {
        type: import("vue").PropType<import("./type").TdChatItemProps["role"]>;
        validator(val: import("./type").TdChatItemProps["role"]): boolean;
    };
    textLoading: BooleanConstructor;
    variant: {
        type: import("vue").PropType<import("./type").TdChatItemProps["variant"]>;
        default: import("./type").TdChatItemProps["variant"];
        validator(val: import("./type").TdChatItemProps["variant"]): boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "operation"[], "operation", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    reasoningLoading: {
        type: BooleanConstructor;
        default: boolean;
    };
    actions: {
        type: import("vue").PropType<import("./type").TdChatItemProps["actions"]>;
    };
    animation: {
        type: import("vue").PropType<import("./type").TdChatItemProps["animation"]>;
        default: import("./type").TdChatItemProps["animation"];
        validator(val: import("./type").TdChatItemProps["animation"]): boolean;
    };
    avatar: {
        type: import("vue").PropType<import("./type").TdChatItemProps["avatar"]>;
    };
    content: {
        type: import("vue").PropType<import("./type").TdChatItemProps["content"]>;
    };
    datetime: {
        type: import("vue").PropType<import("./type").TdChatItemProps["datetime"]>;
    };
    name: {
        type: import("vue").PropType<import("./type").TdChatItemProps["name"]>;
    };
    reasoning: {
        type: import("vue").PropType<import("./type").TdChatItemProps["reasoning"]>;
        default: import("./type").TdChatItemProps["reasoning"];
    };
    role: {
        type: import("vue").PropType<import("./type").TdChatItemProps["role"]>;
        validator(val: import("./type").TdChatItemProps["role"]): boolean;
    };
    textLoading: BooleanConstructor;
    variant: {
        type: import("vue").PropType<import("./type").TdChatItemProps["variant"]>;
        default: import("./type").TdChatItemProps["variant"];
        validator(val: import("./type").TdChatItemProps["variant"]): boolean;
    };
}>> & {
    onOperation?: (...args: any[]) => any;
}, {
    animation: "gradient" | "skeleton" | "moving";
    variant: "base" | "text" | "outline";
    reasoning: boolean | import("./type").TdChatReasoning;
    reasoningLoading: boolean;
    textLoading: boolean;
}, {}>;
export default _default;
