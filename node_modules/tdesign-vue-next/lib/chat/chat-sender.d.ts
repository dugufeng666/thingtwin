import type { TdChatSenderProps } from './type';
declare const _default: import("vue").DefineComponent<{
    disabled: BooleanConstructor;
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    prefix: {
        type: import("vue").PropType<TdChatSenderProps["prefix"]>;
    };
    stopDisabled: BooleanConstructor;
    suffix: {
        type: import("vue").PropType<TdChatSenderProps["suffix"]>;
    };
    textareaProps: {
        type: import("vue").PropType<TdChatSenderProps["textareaProps"]>;
    };
    value: {
        type: import("vue").PropType<TdChatSenderProps["value"]>;
        default: TdChatSenderProps["value"];
    };
    modelValue: {
        type: import("vue").PropType<TdChatSenderProps["value"]>;
        default: TdChatSenderProps["value"];
    };
    defaultValue: {
        type: import("vue").PropType<TdChatSenderProps["defaultValue"]>;
    };
    onBlur: import("vue").PropType<TdChatSenderProps["onBlur"]>;
    onChange: import("vue").PropType<TdChatSenderProps["onChange"]>;
    onFocus: import("vue").PropType<TdChatSenderProps["onFocus"]>;
    onSend: import("vue").PropType<TdChatSenderProps["onSend"]>;
    onStop: import("vue").PropType<TdChatSenderProps["onStop"]>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("focus" | "blur" | "stop" | "send")[], "focus" | "blur" | "stop" | "send", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: BooleanConstructor;
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    prefix: {
        type: import("vue").PropType<TdChatSenderProps["prefix"]>;
    };
    stopDisabled: BooleanConstructor;
    suffix: {
        type: import("vue").PropType<TdChatSenderProps["suffix"]>;
    };
    textareaProps: {
        type: import("vue").PropType<TdChatSenderProps["textareaProps"]>;
    };
    value: {
        type: import("vue").PropType<TdChatSenderProps["value"]>;
        default: TdChatSenderProps["value"];
    };
    modelValue: {
        type: import("vue").PropType<TdChatSenderProps["value"]>;
        default: TdChatSenderProps["value"];
    };
    defaultValue: {
        type: import("vue").PropType<TdChatSenderProps["defaultValue"]>;
    };
    onBlur: import("vue").PropType<TdChatSenderProps["onBlur"]>;
    onChange: import("vue").PropType<TdChatSenderProps["onChange"]>;
    onFocus: import("vue").PropType<TdChatSenderProps["onFocus"]>;
    onSend: import("vue").PropType<TdChatSenderProps["onSend"]>;
    onStop: import("vue").PropType<TdChatSenderProps["onStop"]>;
}>> & {
    onFocus?: (...args: any[]) => any;
    onBlur?: (...args: any[]) => any;
    onSend?: (...args: any[]) => any;
    onStop?: (...args: any[]) => any;
}, {
    disabled: boolean;
    value: string;
    placeholder: string;
    modelValue: string;
    stopDisabled: boolean;
}, {}>;
export default _default;
