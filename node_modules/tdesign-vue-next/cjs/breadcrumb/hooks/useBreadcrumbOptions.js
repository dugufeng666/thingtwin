/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var hooks_slot = require('../../hooks/slot.js');
var isArray = require('../../_chunks/dep-d7a38fb3.js');
var isString = require('../../_chunks/dep-96341f20.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/typeof');
require('../../utils/render-tnode.js');
require('../../_chunks/dep-f022423f.js');
require('../../_chunks/dep-9f078572.js');
require('../../_chunks/dep-7fc1ffe2.js');
require('../../_chunks/dep-39c9581c.js');
require('../../_chunks/dep-b1f64980.js');
require('../../_chunks/dep-3b62827f.js');
require('../../_chunks/dep-29224a9c.js');
require('../../_chunks/dep-5ae95903.js');
require('../../_chunks/dep-8675a24d.js');
require('../../_chunks/dep-25e6caa1.js');
require('../../_chunks/dep-c94b540e.js');
require('../../_chunks/dep-53ee0c65.js');
require('../../_chunks/dep-565984b5.js');
require('../../_chunks/dep-92c5e4a5.js');
require('../../_chunks/dep-78a63892.js');
require('../../_chunks/dep-5d64466b.js');
require('../../_chunks/dep-104f7ee1.js');
require('../../_chunks/dep-e7786719.js');
require('../../_chunks/dep-00397a41.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var useBreadcrumbOptions = function useBreadcrumbOptions(props) {
  var getChildComponentSlots = hooks_slot.useChildComponentSlots();
  var breadcrumbOptions = Vue.computed(function () {
    var _props$options;
    var breadcrumbItems = [];
    var currentIndex = 0;
    if ((_props$options = props.options) !== null && _props$options !== void 0 && _props$options.length) {
      props.options.forEach(function (option) {
        breadcrumbItems.push(_objectSpread(_objectSpread({}, option), {}, {
          index: currentIndex++
        }));
      });
    }
    var itemsSlots = getChildComponentSlots("TBreadcrumbItem");
    if (isArray.isArray(itemsSlots)) {
      itemsSlots.forEach(function (child) {
        var getSlotOrProp = function getSlotOrProp(slotName, propName) {
          var _child$props;
          if (child !== null && child !== void 0 && child.children) {
            var _children$slotName;
            var children = child.children;
            var slotContent = (_children$slotName = children[slotName]) === null || _children$slotName === void 0 ? void 0 : _children$slotName.call(children);
            if (slotContent) {
              if (slotName === "default" && isArray.isArray(slotContent)) {
                var textContent = slotContent.filter(function (item) {
                  return Vue.isVNode(item) && isString.isString(item === null || item === void 0 ? void 0 : item.children);
                }).map(function (item) {
                  return item === null || item === void 0 ? void 0 : item.children;
                }).join("");
                return textContent || slotContent;
              }
              return slotContent;
            }
          }
          return (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props[propName];
        };
        breadcrumbItems.push(_objectSpread(_objectSpread({}, child.props), {}, {
          content: getSlotOrProp("default", "content"),
          icon: function icon() {
            return getSlotOrProp("icon", "icon");
          },
          index: currentIndex++
        }));
      });
    }
    return breadcrumbItems;
  });
  return {
    breadcrumbOptions: breadcrumbOptions
  };
};

exports.useBreadcrumbOptions = useBreadcrumbOptions;
//# sourceMappingURL=useBreadcrumbOptions.js.map
