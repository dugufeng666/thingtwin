/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var tinyColor = require('tinycolor2');
var tag_props = require('./props.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var hooks_tnode = require('../_chunks/dep-8fa35315.js');
var configProvider_hooks_useConfig = require('../config-provider/hooks/useConfig.js');
var isString = require('../_chunks/dep-96341f20.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-f022423f.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-9f078572.js');
require('../_chunks/dep-7fc1ffe2.js');
require('../_chunks/dep-39c9581c.js');
require('../_chunks/dep-d7a38fb3.js');
require('../_chunks/dep-b1f64980.js');
require('../_chunks/dep-3b62827f.js');
require('../_chunks/dep-29224a9c.js');
require('../_chunks/dep-5ae95903.js');
require('../_chunks/dep-8675a24d.js');
require('../_chunks/dep-25e6caa1.js');
require('../_chunks/dep-c94b540e.js');
require('../_chunks/dep-53ee0c65.js');
require('../_chunks/dep-565984b5.js');
require('../_chunks/dep-92c5e4a5.js');
require('../_chunks/dep-78a63892.js');
require('../_chunks/dep-5d64466b.js');
require('../_chunks/dep-104f7ee1.js');
require('../_chunks/dep-e7786719.js');
require('../_chunks/dep-00397a41.js');
require('../_chunks/dep-47100b3a.js');
require('../_chunks/dep-687d9447.js');
require('../_chunks/dep-84fc4531.js');
require('dayjs');
require('../_chunks/dep-22d9d967.js');
require('../_chunks/dep-98fbf983.js');
require('../_chunks/dep-5590274c.js');
require('../_chunks/dep-a929bdb8.js');
require('../_chunks/dep-689071d2.js');
require('../_chunks/dep-edc40e94.js');
require('../_chunks/dep-2ce2286c.js');
require('../_chunks/dep-bb55dbeb.js');
require('../_chunks/dep-e5e0508f.js');
require('../_chunks/dep-8a241271.js');
require('../_chunks/dep-c7e11941.js');
require('../_chunks/dep-7279283f.js');
require('../_chunks/dep-08fa391e.js');
require('../_chunks/dep-2963fcd8.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var tinyColor__default = /*#__PURE__*/_interopDefaultLegacy(tinyColor);

var _Tag = Vue.defineComponent({
  name: "TTag",
  props: tag_props["default"],
  setup: function setup(props2) {
    var _useConfig = configProvider_hooks_useConfig.useConfig("tag"),
      tagGlobalConfig = _useConfig.globalConfig;
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("tag");
    var _useGlobalIcon = hooks_useGlobalIcon.useGlobalIcon({
        CloseIcon: tdesignIconsVueNext.CloseIcon
      }),
      CloseIcon = _useGlobalIcon.CloseIcon;
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var renderContent = hooks_tnode.useContent();
    var _useCommonClassName = hooks_useConfig.useCommonClassName(),
      SIZE = _useCommonClassName.SIZE;
    var _getCurrentInstance = Vue.getCurrentInstance(),
      vnode = _getCurrentInstance.vnode;
    var tagClass = Vue.computed(function () {
      return ["".concat(COMPONENT_NAME.value), "".concat(COMPONENT_NAME.value, "--").concat(props2.theme), "".concat(COMPONENT_NAME.value, "--").concat(props2.variant), _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(COMPONENT_NAME.value, "--ellipsis"), props2.maxWidth), "".concat(COMPONENT_NAME.value, "--close"), props2.closable), "".concat(COMPONENT_NAME.value, "--disabled"), props2.disabled), SIZE.value[props2.size], props2.size !== "medium"), props2.shape !== "square" && "".concat(COMPONENT_NAME.value, "--").concat(props2.shape)];
    });
    var tagStyle = Vue.computed(function () {
      return getTagColorStyle();
    });
    var textStyle = Vue.computed(function () {
      if (!props2.maxWidth) return {};
      return {
        maxWidth: isNaN(Number(props2.maxWidth)) ? String(props2.maxWidth) : "".concat(props2.maxWidth, "px")
      };
    });
    var getTagColorStyle = function getTagColorStyle() {
      var color = props2.color,
        variant = props2.variant;
      if (!color) return {};
      var luminance = tinyColor__default["default"](color).getLuminance();
      var style = {
        color: luminance > 0.5 ? "black" : "white"
      };
      if (variant === "outline" || variant === "light-outline") {
        style.borderColor = color;
      }
      if (variant !== "outline") {
        var getLightestShade = function getLightestShade() {
          var _tinycolor$toRgb = tinyColor__default["default"](color).toRgb(),
            r = _tinycolor$toRgb.r,
            g = _tinycolor$toRgb.g,
            b = _tinycolor$toRgb.b;
          return "rgba(".concat(r, ", ").concat(g, ", ").concat(b, ", 0.1)");
        };
        style.backgroundColor = variant === "dark" ? color : getLightestShade();
      }
      if (variant !== "dark") {
        style.color = color;
      }
      return style;
    };
    var handleClick = function handleClick(e) {
      var _props2$onClick;
      if (props2.disabled) return;
      (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 || _props2$onClick.call(props2, {
        e: e
      });
    };
    var getCloseIcon = function getCloseIcon() {
      if (!props2.closable) return null;
      var iconClassName = "".concat(COMPONENT_NAME.value, "__icon-close");
      if (tagGlobalConfig.value.closeIcon) {
        return Vue.h(tagGlobalConfig.value.closeIcon(Vue.h), {
          "class": iconClassName
        });
      }
      return Vue.createVNode(CloseIcon, {
        "onClick": function onClick(_ref2) {
          var _props2$onClose;
          var e = _ref2.e;
          if (e) e.stopPropagation();
          (_props2$onClose = props2.onClose) === null || _props2$onClose === void 0 || _props2$onClose.call(props2, {
            e: e
          });
        },
        "class": iconClassName
      }, null);
    };
    var renderTitle = function renderTitle(tagContent) {
      var vProps = vnode.props || {};
      if (Reflect.has(vProps, "title")) {
        return vProps.title || void 0;
      }
      if (tagContent) {
        return tagContent;
      }
      return void 0;
    };
    return function () {
      var closeIcon = getCloseIcon();
      var tagContent = renderContent("default", "content");
      var icon = renderTNodeJSX("icon");
      var title = renderTitle(isString.isString(tagContent) ? tagContent : "");
      return Vue.createVNode("div", {
        "class": tagClass.value,
        "style": tagStyle.value,
        "onClick": handleClick
      }, [icon, Vue.createVNode("span", {
        "class": props2.maxWidth ? "".concat(COMPONENT_NAME.value, "--text") : void 0,
        "style": textStyle.value,
        "title": title
      }, [tagContent]), !props2.disabled && closeIcon]);
    };
  }
});

exports["default"] = _Tag;
//# sourceMappingURL=tag.js.map
