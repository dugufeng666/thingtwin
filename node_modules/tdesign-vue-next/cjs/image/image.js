/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var Vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var observe = require('../_chunks/dep-ae7ffc57.js');
var configProvider_hooks_useConfig = require('../config-provider/hooks/useConfig.js');
var hooks_tnode = require('../_chunks/dep-8fa35315.js');
var image_props = require('./props.js');
var space_index = require('../space/index.js');
var hooks_useImagePreviewUrl = require('../hooks/useImagePreviewUrl.js');
var isFunction = require('../_chunks/dep-c94b540e.js');
var omit = require('../_chunks/dep-9ca23be8.js');
var isString = require('../_chunks/dep-96341f20.js');
require('../_chunks/dep-47100b3a.js');
require('../_chunks/dep-687d9447.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-84fc4531.js');
require('dayjs');
require('../_chunks/dep-22d9d967.js');
require('../_chunks/dep-98fbf983.js');
require('../_chunks/dep-5590274c.js');
require('../_chunks/dep-104f7ee1.js');
require('../_chunks/dep-39c9581c.js');
require('../_chunks/dep-f022423f.js');
require('../_chunks/dep-a929bdb8.js');
require('../_chunks/dep-00397a41.js');
require('../_chunks/dep-3b62827f.js');
require('../_chunks/dep-d7a38fb3.js');
require('../_chunks/dep-92c5e4a5.js');
require('../_chunks/dep-78a63892.js');
require('../_chunks/dep-5d64466b.js');
require('../_chunks/dep-689071d2.js');
require('../_chunks/dep-edc40e94.js');
require('../_chunks/dep-2ce2286c.js');
require('../_chunks/dep-bb55dbeb.js');
require('../_chunks/dep-e5e0508f.js');
require('../_chunks/dep-8a241271.js');
require('../_chunks/dep-c7e11941.js');
require('../_chunks/dep-7279283f.js');
require('../_chunks/dep-08fa391e.js');
require('../_chunks/dep-565984b5.js');
require('../_chunks/dep-e7786719.js');
require('../_chunks/dep-2963fcd8.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-9f078572.js');
require('../_chunks/dep-7fc1ffe2.js');
require('../_chunks/dep-b1f64980.js');
require('../_chunks/dep-29224a9c.js');
require('../_chunks/dep-5ae95903.js');
require('../_chunks/dep-8675a24d.js');
require('../_chunks/dep-25e6caa1.js');
require('../_chunks/dep-53ee0c65.js');
require('../space/space.js');
require('@babel/runtime/helpers/defineProperty');
require('../space/props.js');
require('../hooks/useConfig.js');
require('../hooks/slot.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../_chunks/dep-ec4a2dad.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../_chunks/dep-ceab8f85.js');
require('../_chunks/dep-a8fcbdcc.js');
require('../_chunks/dep-ec389751.js');
require('../utils/withInstall.js');
require('../_chunks/dep-2af62081.js');
require('../_chunks/dep-94e74ea7.js');
require('../_chunks/dep-69e83dde.js');
require('../_chunks/dep-b658bf06.js');
require('../_chunks/dep-b84a0534.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

var _Image = Vue.defineComponent({
  name: "TImage",
  props: image_props["default"],
  setup: function setup(props2) {
    var divRef = Vue.ref(null);
    var imgRef = Vue.ref(null);
    var io = null;
    var _toRefs = Vue.toRefs(props2),
      src = _toRefs.src;
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    Vue.onMounted(function () {
      var _imgRef$value;
      if ((_imgRef$value = imgRef.value) !== null && _imgRef$value !== void 0 && _imgRef$value.complete && !props2.lazy) {
        triggerHandleLoad();
      }
      if (!props2.lazy || !divRef.value) return;
      var ioObserver = observe.observe(divRef.value, null, handleLoadImage, 0);
      io = ioObserver;
    });
    Vue.onUnmounted(function () {
      divRef.value && io && io.unobserve(divRef.value);
    });
    var _useConfig = configProvider_hooks_useConfig.useConfig("image"),
      classPrefix = _useConfig.classPrefix,
      globalConfig = _useConfig.globalConfig;
    var imageStrSrc = Vue.ref(src.value);
    Vue.watch([src, globalConfig], function (_ref) {
      var _ref2 = _slicedToArray__default["default"](_ref, 2),
        src2 = _ref2[0],
        globalConfig2 = _ref2[1];
      var _ref3 = globalConfig2 || {},
        replaceImageSrc = _ref3.replaceImageSrc;
      var tmpUrl = isFunction.isFunction(replaceImageSrc) ? replaceImageSrc(props2) : src2;
      if (tmpUrl === imageStrSrc.value && imageStrSrc.value) return;
      imageStrSrc.value = tmpUrl;
    }, {
      immediate: true
    });
    var _useImagePreviewUrl = hooks_useImagePreviewUrl.useImagePreviewUrl(imageStrSrc),
      previewUrl = _useImagePreviewUrl.previewUrl;
    Vue.watch([previewUrl], function () {
      hasError.value = false;
      isLoaded.value = false;
    });
    var shouldLoad = Vue.ref(!props2.lazy);
    var handleLoadImage = function handleLoadImage() {
      shouldLoad.value = true;
    };
    var isLoaded = Vue.ref(false);
    var handleLoad = function handleLoad(e) {
      var _props2$onLoad;
      isLoaded.value = true;
      (_props2$onLoad = props2.onLoad) === null || _props2$onLoad === void 0 || _props2$onLoad.call(props2, {
        e: e
      });
    };
    var triggerHandleLoad = function triggerHandleLoad() {
      var loadEvent = new Event("load");
      Object.defineProperty(loadEvent, "target", {
        value: imgRef.value,
        enumerable: true
      });
      handleLoad(loadEvent);
    };
    var hasError = Vue.ref(false);
    var handleError = function handleError(e) {
      var _props2$onError;
      hasError.value = true;
      (_props2$onError = props2.onError) === null || _props2$onError === void 0 || _props2$onError.call(props2, {
        e: e
      });
      if (props2.fallback) {
        imageStrSrc.value = props2.fallback;
        hasError.value = false;
      }
    };
    var hasMouseEvent = Vue.computed(function () {
      return props2.overlayTrigger === "hover";
    });
    var imageClasses = Vue.computed(function () {
      return ["".concat(classPrefix.value, "-image"), "".concat(classPrefix.value, "-image--fit-").concat(props2.fit), "".concat(classPrefix.value, "-image--position-").concat(props2.position)];
    });
    var shouldShowOverlay = Vue.ref(!hasMouseEvent.value);
    var handleToggleOverlay = function handleToggleOverlay() {
      if (hasMouseEvent.value) {
        shouldShowOverlay.value = !shouldShowOverlay.value;
      }
    };
    var renderPlaceholder = function renderPlaceholder() {
      var placeholder = renderTNodeJSX("placeholder");
      if (!placeholder) return null;
      return Vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image__placeholder")
      }, [placeholder]);
    };
    var renderGalleryShadow = function renderGalleryShadow() {
      if (!props2.gallery) return null;
      return Vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image__gallery-shadow")
      }, null);
    };
    var renderOverlay = function renderOverlay() {
      var overlayContent = renderTNodDefault("overlayContent");
      if (!overlayContent) return null;
      return Vue.createVNode("div", {
        "class": ["".concat(classPrefix.value, "-image__overlay-content"), !shouldShowOverlay.value && "".concat(classPrefix.value, "-image__overlay-content--hidden")]
      }, [overlayContent]);
    };
    function renderImageSrcset() {
      return Vue.createVNode("picture", null, [Object.entries(props2.srcset).map(function (_ref4) {
        var _ref5 = _slicedToArray__default["default"](_ref4, 2),
          type = _ref5[0],
          url = _ref5[1];
        return Vue.createVNode("source", {
          "type": type,
          "srcset": url
        }, null);
      }), renderImage()]);
    }
    function renderImage() {
      var url = isString.isString(imageStrSrc.value) ? imageStrSrc.value : previewUrl.value;
      return Vue.createVNode("img", {
        "ref": imgRef,
        "src": url,
        "onError": handleError,
        "onLoad": handleLoad,
        "class": imageClasses.value,
        "alt": props2.alt,
        "referrerpolicy": props2.referrerpolicy
      }, null);
    }
    var renderTNodDefault = hooks_tnode.useTNodeDefault();
    return function () {
      return Vue.createVNode("div", Vue.mergeProps({
        "ref": divRef,
        "class": ["".concat(classPrefix.value, "-image__wrapper"), "".concat(classPrefix.value, "-image__wrapper--shape-").concat(props2.shape), props2.gallery && "".concat(classPrefix.value, "-image__wrapper--gallery"), hasMouseEvent.value && "".concat(classPrefix.value, "-image__wrapper--need-hover")],
        "onMouseenter": handleToggleOverlay,
        "onMouseleave": handleToggleOverlay
      }, omit.omit(props2, ["src", "alt", "fit", "position", "shape", "placeholder", "loading", "error", "overlayTrigger", "overlayContent", "lazy", "gallery", "onLoad", "onError"])), [renderPlaceholder(), renderGalleryShadow(), (hasError.value || !shouldLoad.value) && Vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image")
      }, null), !(hasError.value || !shouldLoad.value) && (props2.srcset && Object.keys(props2.srcset).length ? renderImageSrcset() : renderImage()), !(hasError.value || !shouldLoad.value) && !isLoaded.value && Vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image__loading")
      }, [renderTNodeJSX("loading") || Vue.createVNode(space_index.Space, {
        "direction": "vertical",
        "size": 8,
        "align": "center"
      }, {
        "default": function _default() {
          return [Vue.createVNode(tdesignIconsVueNext.ImageIcon, {
            "size": "24px"
          }, null), isString.isString(props2.loading) ? props2.loading : globalConfig.value.loadingText];
        }
      })]), hasError.value && Vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image__error")
      }, [renderTNodDefault("error", {
        defaultNode: Vue.createVNode(space_index.Space, {
          "direction": "vertical",
          "size": 8,
          "align": "center"
        }, {
          "default": function _default() {
            return [Vue.createVNode(tdesignIconsVueNext.ImageErrorIcon, {
              "size": "24px"
            }, null), isString.isString(props2.error) ? props2.error : globalConfig.value.errorText];
          }
        })
      })]), renderOverlay()]);
    };
  }
});

exports["default"] = _Image;
//# sourceMappingURL=image.js.map
