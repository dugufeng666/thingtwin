/**
 * tdesign v1.12.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var loading_index = require('../../loading/index.js');
var link_index = require('../../link/index.js');
var hooks_tnode = require('../../_chunks/dep-db9cff9c.js');
var utils = require('../../_chunks/dep-dea5b5ff.js');
var hooks_useGlobalIcon = require('../../hooks/useGlobalIcon.js');
var upload_consts_index = require('../consts/index.js');
require('../../_chunks/dep-14125703.js');
require('../../loading/plugin.js');
require('../../loading/loading.js');
require('@babel/runtime/helpers/slicedToArray');
require('../../loading/icon/gradient.js');
require('../../hooks/useConfig.js');
require('../../config-provider/hooks/useConfig.js');
require('../../_chunks/dep-ede16f7f.js');
require('../../_chunks/dep-1d38e864.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-75a87f7c.js');
require('dayjs');
require('../../_chunks/dep-99110617.js');
require('../../_chunks/dep-5e2171e6.js');
require('../../_chunks/dep-ce3eb768.js');
require('../../_chunks/dep-4479843a.js');
require('../../_chunks/dep-4bb500b8.js');
require('../../_chunks/dep-fa2fda14.js');
require('../../_chunks/dep-0e58cbbd.js');
require('../../_chunks/dep-00f18931.js');
require('../../_chunks/dep-84a0e81d.js');
require('../../_chunks/dep-5247a460.js');
require('../../_chunks/dep-a76126df.js');
require('../../_chunks/dep-564b3613.js');
require('../../_chunks/dep-11fc6f95.js');
require('../../_chunks/dep-c3bc048f.js');
require('../../_chunks/dep-58abd685.js');
require('../../_chunks/dep-3a0b641f.js');
require('../../_chunks/dep-e6692a32.js');
require('../../_chunks/dep-10d5d599.js');
require('../../_chunks/dep-41ef4b47.js');
require('../../_chunks/dep-d0783150.js');
require('../../_chunks/dep-9e87e1e1.js');
require('../../_chunks/dep-fcea8340.js');
require('../../_chunks/dep-2debdee8.js');
require('../../_chunks/dep-1c142d75.js');
require('../../_chunks/dep-c1b17346.js');
require('../../_chunks/dep-94fa6b5d.js');
require('../../_chunks/dep-12a3fd02.js');
require('../../_chunks/dep-0290afd5.js');
require('../../_chunks/dep-ce66c261.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../_chunks/dep-6bdaf809.js');
require('../../_chunks/dep-19f6d038.js');
require('../../_chunks/dep-272b1445.js');
require('../../utils/dom.js');
require('../../hooks/useTeleport.js');
require('../../loading/props.js');
require('../../utils/render-tnode.js');
require('../../_chunks/dep-3a1cfa95.js');
require('../../_chunks/dep-6441bda0.js');
require('../../_chunks/dep-54b7116c.js');
require('../../_chunks/dep-36b83f83.js');
require('../../_chunks/dep-e2633705.js');
require('../../_chunks/dep-0b6e5f33.js');
require('../../_chunks/dep-3c0d3dc9.js');
require('../../_chunks/dep-5472dcbf.js');
require('../../_chunks/dep-9ab88918.js');
require('../../_chunks/dep-425a3c77.js');
require('../../_chunks/dep-449af6ce.js');
require('../../_chunks/dep-13bdf55b.js');
require('../../_chunks/dep-f0a744e5.js');
require('../../_chunks/dep-c8867018.js');
require('../../_chunks/dep-350b64b1.js');
require('../../utils/withInstall.js');
require('../../link/link.js');
require('../../hooks/useDisabled.js');
require('../../_chunks/dep-1e4a8214.js');
require('../../link/props.js');
require('../../_chunks/dep-7bb1a236.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Vue.isVNode(s);
}
var NormalFile = Vue.defineComponent({
  name: "UploadNormalFile",
  props: _objectSpread({
    multiple: Boolean
  }, upload_consts_index.commonProps),
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    var _toRefs = Vue.toRefs(props),
      theme = _toRefs.theme,
      disabled = _toRefs.disabled,
      classPrefix = _toRefs.classPrefix;
    var locale = Vue.computed(function () {
      return props.locale;
    });
    var _useGlobalIcon = hooks_useGlobalIcon.useGlobalIcon({
        CloseIcon: tdesignIconsVueNext.CloseIcon,
        TimeFilledIcon: tdesignIconsVueNext.TimeFilledIcon,
        CheckCircleFilledIcon: tdesignIconsVueNext.CheckCircleFilledIcon,
        ErrorCircleFilledIcon: tdesignIconsVueNext.ErrorCircleFilledIcon,
        CloseCircleFilledIcon: tdesignIconsVueNext.CloseCircleFilledIcon
      }),
      CloseIcon = _useGlobalIcon.CloseIcon,
      TimeFilledIcon = _useGlobalIcon.TimeFilledIcon,
      CheckCircleFilledIcon = _useGlobalIcon.CheckCircleFilledIcon,
      ErrorCircleFilledIcon = _useGlobalIcon.ErrorCircleFilledIcon,
      CloseCircleFilledIcon = _useGlobalIcon.CloseCircleFilledIcon;
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var uploadPrefix = "".concat(classPrefix.value, "-upload");
    var renderProgress = function renderProgress(percent) {
      return Vue.createVNode("div", {
        "class": "".concat(uploadPrefix, "__single-progress")
      }, [Vue.createVNode(loading_index.Loading, null, null), props.showUploadProgress && Vue.createVNode("span", {
        "class": "".concat(uploadPrefix, "__single-percent")
      }, [percent || 0, "%"])]);
    };
    var renderFilePreviewAsText = function renderFilePreviewAsText(files) {
      var _files$;
      if (theme.value !== "file") return null;
      if (!props.multiple && ((_files$ = files[0]) === null || _files$ === void 0 ? void 0 : _files$.status) === "fail" && props.autoUpload) {
        return null;
      }
      return files.map(function (file, index) {
        var fileName = props.abridgeName && file.name ? utils.abridgeName.apply(void 0, [file.name].concat(_toConsumableArray__default["default"](props.abridgeName))) : file.name;
        return Vue.createVNode("div", {
          "class": "".concat(uploadPrefix, "__single-display-text ").concat(uploadPrefix, "__display-text--margin"),
          "key": file.name + index + file.percent + file.status
        }, [file.url ? Vue.createVNode(link_index.Link, {
          "href": file.url,
          "target": "_blank",
          "hover": "color",
          "size": "small",
          "class": "".concat(uploadPrefix, "__single-name"),
          "disabled": false
        }, _isSlot(fileName) ? fileName : {
          "default": function _default() {
            return [fileName];
          }
        }) : Vue.createVNode("span", {
          "class": "".concat(uploadPrefix, "__single-name")
        }, [fileName]), file.status === "fail" && Vue.createVNode("div", {
          "class": "".concat(uploadPrefix, "__flow-status ").concat(uploadPrefix, "__file-fail")
        }, [Vue.createVNode(ErrorCircleFilledIcon, null, null)]), file.status === "waiting" && Vue.createVNode("div", {
          "class": "".concat(uploadPrefix, "__flow-status ").concat(uploadPrefix, "__file-waiting")
        }, [Vue.createVNode(TimeFilledIcon, null, null)]), file.status === "progress" && renderProgress(file.percent), !disabled.value && file.status !== "progress" && Vue.createVNode(CloseIcon, {
          "class": "".concat(uploadPrefix, "__icon-delete"),
          "onClick": function onClick(_ref2) {
            var e = _ref2.e;
            return props.onRemove({
              e: e,
              file: file,
              index: index
            });
          }
        }, null)]);
      });
    };
    var renderFilePreviewAsInput = function renderFilePreviewAsInput() {
      var _props$abridgeName;
      if (theme.value !== "file-input") return;
      var file = props.displayFiles[0] || [];
      var inputTextClass = ["".concat(classPrefix.value, "-input__inner"), _defineProperty__default["default"]({}, "".concat(uploadPrefix, "__placeholder"), !props.displayFiles[0])];
      var disabledClass = disabled.value ? "".concat(classPrefix.value, "-is-disabled") : "";
      var fileName = (_props$abridgeName = props.abridgeName) !== null && _props$abridgeName !== void 0 && _props$abridgeName.length && file !== null && file !== void 0 && file.name ? utils.abridgeName.apply(void 0, [file.name].concat(_toConsumableArray__default["default"](props.abridgeName))) : file === null || file === void 0 ? void 0 : file.name;
      return Vue.createVNode("div", {
        "class": "".concat(uploadPrefix, "__single-input-preview ").concat(classPrefix.value, "-input ").concat(disabledClass)
      }, [Vue.createVNode("div", {
        "class": inputTextClass
      }, [Vue.createVNode("span", {
        "class": ["".concat(uploadPrefix, "__single-input-text"), _defineProperty__default["default"]({}, props.placeholderClass, props.placeholder && !(file !== null && file !== void 0 && file.name))]
      }, [file !== null && file !== void 0 && file.name ? fileName : props.placeholder]), (file === null || file === void 0 ? void 0 : file.status) === "progress" && renderProgress(file.percent), (file === null || file === void 0 ? void 0 : file.status) === "waiting" && Vue.createVNode(TimeFilledIcon, {
        "class": "".concat(uploadPrefix, "__status-icon ").concat(uploadPrefix, "__file-waiting")
      }, null), file.status === "success" && Vue.createVNode(CheckCircleFilledIcon, {
        "class": "".concat(uploadPrefix, "__status-icon")
      }, null), (file === null || file === void 0 ? void 0 : file.name) && file.status === "fail" && Vue.createVNode(ErrorCircleFilledIcon, {
        "class": "".concat(uploadPrefix, "__status-icon ").concat(uploadPrefix, "__file-fail")
      }, null), Boolean(!disabled.value && file.name) && Vue.createVNode(CloseCircleFilledIcon, {
        "class": "".concat(uploadPrefix, "__single-input-clear"),
        "onClick": function onClick(_ref5) {
          var e = _ref5.e;
          return props.onRemove({
            e: e,
            file: file,
            index: 0
          });
        }
      }, null)])]);
    };
    return function () {
      var _slots$default, _displayFiles$, _displayFiles$0$respo;
      var classes = ["".concat(uploadPrefix, "__single"), "".concat(uploadPrefix, "__single-").concat(theme.value)];
      var fileListDisplay = renderTNodeJSX("fileListDisplay", {
        params: {
          onRemove: props.onRemove,
          toUploadFiles: props.toUploadFiles,
          sizeOverLimitMessage: props.sizeOverLimitMessage,
          locale: props.locale,
          files: props.displayFiles
        }
      });
      if (props.fileListDisplay === null || fileListDisplay === null) {
        fileListDisplay = null;
      }
      var displayFiles = props.displayFiles;
      return Vue.createVNode("div", {
        "class": classes
      }, [theme.value === "file-input" && renderFilePreviewAsInput(), (_slots$default = slots["default"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots), theme.value === "file" && props.placeholder && !displayFiles[0] && Vue.createVNode("small", {
        "class": [props.tipsClasses, props.placeholderClass]
      }, [props.placeholder]), fileListDisplay === null ? null : fileListDisplay || renderFilePreviewAsText(displayFiles), !props.multiple && ((_displayFiles$ = displayFiles[0]) === null || _displayFiles$ === void 0 ? void 0 : _displayFiles$.status) === "fail" && theme.value === "file" ? Vue.createVNode("small", {
        "class": [props.errorClasses, props.placeholderClass]
      }, [((_displayFiles$0$respo = displayFiles[0].response) === null || _displayFiles$0$respo === void 0 ? void 0 : _displayFiles$0$respo.error) || locale.value.progress.failText]) : null]);
    };
  }
});

exports["default"] = NormalFile;
//# sourceMappingURL=normal-file.js.map
