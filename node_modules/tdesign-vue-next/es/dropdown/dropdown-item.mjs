/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-4c19ba66.mjs';
import { defineComponent, ref, createVNode } from 'vue';
import dropdownItemProps from './dropdown-item-props.mjs';
import useRipple from '../hooks/useRipple.mjs';
import { u as useTNodeJSX, a as useContent } from '../_chunks/dep-8664c288.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { p as pxCompat } from '../_chunks/dep-b638a875.mjs';
import '../_chunks/dep-3a46b404.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../config-provider/utils/context.mjs';
import 'lodash-es';
import '../_chunks/dep-960f05e3.mjs';
import '../_chunks/dep-608ebfe7.mjs';
import '../_chunks/dep-0f539ccd.mjs';
import '../_chunks/dep-3873beae.mjs';
import '../config-provider/hooks/useConfig.mjs';
import '../_chunks/dep-487987c7.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-c7a7c399.mjs';
import '../_chunks/dep-52e265eb.mjs';
import '../_chunks/dep-c514ed63.mjs';
import '../_chunks/dep-c9dbce85.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _DropdownItem = defineComponent({
  name: "TDropdownItem",
  props: _objectSpread(_objectSpread({}, dropdownItemProps), {}, {
    maxColumnWidth: {
      type: [String, Number],
      "default": 100
    },
    minColumnWidth: {
      type: [String, Number],
      "default": 10
    },
    isSubmenu: Boolean
  }),
  setup: function setup(props) {
    var renderTNodeJSX = useTNodeJSX();
    var renderContent = useContent();
    var itemRef = ref();
    useRipple(props.isSubmenu ? null : itemRef);
    var prefixIcon = renderTNodeJSX("prefixIcon");
    var dropdownItemClass = usePrefixClass("dropdown__item");
    var handleItemClick = function handleItemClick(e) {
      var _props$onClick;
      if (props.disabled) return;
      (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, props.value, {
        e: e
      });
    };
    return function () {
      var content = renderContent("default", "content");
      var classes = [dropdownItemClass.value, "".concat(dropdownItemClass.value, "--theme-").concat(props.theme), _defineProperty(_defineProperty({}, "".concat(dropdownItemClass.value, "--active"), props.active), "".concat(dropdownItemClass.value, "--disabled"), props.disabled)];
      return createVNode("li", {
        "class": classes,
        "onClick": handleItemClick,
        "style": {
          maxWidth: pxCompat(props.maxColumnWidth),
          minWidth: pxCompat(props.minColumnWidth)
        },
        "ref": itemRef
      }, [props.prefixIcon ? createVNode("div", {
        "class": "".concat(dropdownItemClass.value, "-icon")
      }, [prefixIcon]) : null, content]);
    };
  }
});

export { _DropdownItem as default };
//# sourceMappingURL=dropdown-item.mjs.map
