declare const _default: import("vue").DefineComponent<{
    content: {
        type: StringConstructor;
        default: string;
    };
    disabled: BooleanConstructor;
    isBad: BooleanConstructor;
    isGood: BooleanConstructor;
    operationBtn: {
        type: import("vue").PropType<import("./type").TdChatActionProps["operationBtn"]>;
        default: () => import("./type").TdChatActionProps["operationBtn"];
    };
    onOperation: import("vue").PropType<import("./type").TdChatActionProps["onOperation"]>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "operation"[], "operation", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    content: {
        type: StringConstructor;
        default: string;
    };
    disabled: BooleanConstructor;
    isBad: BooleanConstructor;
    isGood: BooleanConstructor;
    operationBtn: {
        type: import("vue").PropType<import("./type").TdChatActionProps["operationBtn"]>;
        default: () => import("./type").TdChatActionProps["operationBtn"];
    };
    onOperation: import("vue").PropType<import("./type").TdChatActionProps["onOperation"]>;
}>> & {
    onOperation?: (...args: any[]) => any;
}, {
    disabled: boolean;
    content: string;
    operationBtn: ("copy" | "replay" | "good" | "bad")[];
    isBad: boolean;
    isGood: boolean;
}, {}>;
export default _default;
