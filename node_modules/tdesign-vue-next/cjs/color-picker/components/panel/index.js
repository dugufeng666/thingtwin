/**
 * tdesign v1.13.0
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var color = require('../../../_chunks/dep-271175a4.js');
var constants = require('../../../_chunks/dep-b16531ed.js');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
var format = require('../../../_chunks/dep-ecacc24a.js');
var hooks_useConfig = require('../../../hooks/useConfig.js');
var colorPicker_props = require('../../props.js');
var colorPicker_components_panel_header = require('./header.js');
var colorPicker_components_panel_linearGradient = require('./linear-gradient.js');
var colorPicker_components_panel_saturation = require('./saturation.js');
var colorPicker_components_panel_hue = require('./hue.js');
var colorPicker_components_panel_alpha = require('./alpha.js');
var colorPicker_components_format_index = require('../format/index.js');
var colorPicker_components_panel_swatches = require('./swatches.js');
var colorPicker_hooks_index = require('../../hooks/index.js');
var hooks_useVModel = require('../../../hooks/useVModel.js');
var hooks_useDefaultValue = require('../../../hooks/useDefaultValue.js');
var configProvider_hooks_useConfig = require('../../../config-provider/hooks/useConfig.js');
var cloneDeep = require('../../../_chunks/dep-7279283f.js');
require('tinycolor2');
require('../../../_chunks/dep-96341f20.js');
require('../../../_chunks/dep-39c9581c.js');
require('@babel/runtime/helpers/typeof');
require('../../../_chunks/dep-d7a38fb3.js');
require('../../../_chunks/dep-3b62827f.js');
require('../../../_chunks/dep-a8fcbdcc.js');
require('../../../_chunks/dep-47100b3a.js');
require('../../../_chunks/dep-687d9447.js');
require('../../../_chunks/dep-84fc4531.js');
require('dayjs');
require('../../../_chunks/dep-22d9d967.js');
require('../../../_chunks/dep-98fbf983.js');
require('../../../_chunks/dep-5590274c.js');
require('../../../_chunks/dep-104f7ee1.js');
require('../../../_chunks/dep-c94b540e.js');
require('../../../_chunks/dep-f022423f.js');
require('../../../_chunks/dep-a929bdb8.js');
require('../../../_chunks/dep-00397a41.js');
require('../../../_chunks/dep-92c5e4a5.js');
require('../../../_chunks/dep-78a63892.js');
require('../../../_chunks/dep-5d64466b.js');
require('../../../_chunks/dep-689071d2.js');
require('../../../_chunks/dep-edc40e94.js');
require('../../../_chunks/dep-2ce2286c.js');
require('../../../_chunks/dep-bb55dbeb.js');
require('../../../_chunks/dep-e5e0508f.js');
require('../../../_chunks/dep-8a241271.js');
require('../../../_chunks/dep-c7e11941.js');
require('../../../_chunks/dep-08fa391e.js');
require('../../../_chunks/dep-565984b5.js');
require('../../../_chunks/dep-e7786719.js');
require('../../../_chunks/dep-2963fcd8.js');
require('../../../radio/index.js');
require('../../../radio/radio.js');
require('../../../radio/props.js');
require('../../../radio/consts/index.js');
require('../../../hooks/useDisabled.js');
require('../../../_chunks/dep-b12afab7.js');
require('../../../hooks/useReadonly.js');
require('../../../_chunks/dep-8fa35315.js');
require('../../../utils/render-tnode.js');
require('../../../_chunks/dep-9f078572.js');
require('../../../_chunks/dep-7fc1ffe2.js');
require('../../../_chunks/dep-b1f64980.js');
require('../../../_chunks/dep-29224a9c.js');
require('../../../_chunks/dep-5ae95903.js');
require('../../../_chunks/dep-8675a24d.js');
require('../../../_chunks/dep-25e6caa1.js');
require('../../../_chunks/dep-53ee0c65.js');
require('../../../_chunks/dep-ec4a2dad.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../../_chunks/dep-ceab8f85.js');
require('../../../_chunks/dep-ec389751.js');
require('../../../_chunks/dep-9ca23be8.js');
require('../../../_chunks/dep-69e83dde.js');
require('../../../_chunks/dep-b658bf06.js');
require('../../../_chunks/dep-b84a0534.js');
require('../../../radio/group.js');
require('@babel/runtime/helpers/asyncToGenerator');
require('@babel/runtime/regenerator');
require('../../../radio/radio-group-props.js');
require('../../../radio/radio-button.js');
require('../../../radio/hooks/useKeyboard.js');
require('../../../utils/dom.js');
require('../../../_chunks/dep-1cf0bd44.js');
require('../../../watermark/hooks/index.js');
require('../../../hooks/useResizeObserver.js');
require('../../../_chunks/dep-c062aeb0.js');
require('../../../_chunks/dep-55d4f411.js');
require('../../../_chunks/dep-fb7bcbec.js');
require('../../../_chunks/dep-01fce6ff.js');
require('../../../_chunks/dep-2766940c.js');
require('../../../_chunks/dep-c6b053f2.js');
require('../../../_chunks/dep-7456f387.js');
require('../../../utils/withInstall.js');
require('../../../hooks/useKeepAnimation.js');
require('../../../input-number/index.js');
require('../../../input-number/input-number.js');
require('tdesign-icons-vue-next');
require('../../../button/index.js');
require('../../../button/button.js');
require('../../../loading/index.js');
require('../../../_chunks/dep-6f7850dd.js');
require('../../../loading/plugin.js');
require('../../../loading/loading.js');
require('../../../loading/icon/gradient.js');
require('../../../_chunks/dep-00dea1d2.js');
require('../../../hooks/useTeleport.js');
require('../../../loading/props.js');
require('../../../_chunks/dep-3d3d9813.js');
require('../../../_chunks/dep-290797fe.js');
require('../../../_chunks/dep-f92d0863.js');
require('../../../button/props.js');
require('../../../hooks/useRipple.js');
require('../../../input/index.js');
require('../../../input/input.js');
require('../../../input/props.js');
require('../../../hooks/useGlobalIcon.js');
require('../../../input/hooks/useInput.js');
require('../../../form/consts/index.js');
require('../../../input/hooks/useLengthLimit.js');
require('../../../_chunks/dep-94e74ea7.js');
require('../../../input/hooks/useInputEventHandler.js');
require('../../../input/hooks/useInputWidth.js');
require('../../../input/input-group.js');
require('../../../input/input-group-props.js');
require('../../../input-number/props.js');
require('../../../input-number/hooks/useInputNumber.js');
require('../../../hooks/useCommonClassName.js');
require('../../../_chunks/dep-76591ab3.js');
require('../../../_chunks/dep-46f42510.js');
require('./base-props.js');
require('../../../_chunks/dep-017ed6b6.js');
require('./slider.js');
require('../../../select/index.js');
require('../../../select/select.js');
require('../../../common-components/fake-arrow.js');
require('../../../select-input/index.js');
require('../../../select-input/select-input.js');
require('../../../popup/index.js');
require('../../../popup/popup.js');
require('@popperjs/core');
require('../../../popup/container.js');
require('../../../popup/props.js');
require('../../../select-input/props.js');
require('../../../select-input/hooks/useMultiple.js');
require('../../../tag-input/index.js');
require('../../../tag-input/tag-input.js');
require('../../../tag-input/props.js');
require('../../../tag-input/hooks/useDragSorter.js');
require('../../../tag-input/hooks/useHover.js');
require('../../../tag-input/hooks/useTagScroll.js');
require('../../../tag-input/hooks/useTagList.js');
require('../../../tag/index.js');
require('../../../tag/tag.js');
require('../../../tag/props.js');
require('../../../tag/check-tag.js');
require('../../../tag/check-tag-props.js');
require('../../../tag/check-tag-group.js');
require('../../../tag/check-tag-group-props.js');
require('../../../select-input/hooks/useOverlayInnerStyle.js');
require('../../../select-input/hooks/useSingle.js');
require('../../../_chunks/dep-424e6f88.js');
require('../../../_chunks/dep-a8e2be65.js');
require('../../../select/select-panel.js');
require('../../../select/option.js');
require('../../../select/option-props.js');
require('../../../checkbox/index.js');
require('../../../checkbox/checkbox.js');
require('../../../checkbox/props.js');
require('../../../checkbox/consts/index.js');
require('../../../checkbox/hooks/useCheckboxLazyLoad.js');
require('../../../_chunks/dep-ae7ffc57.js');
require('../../../checkbox/hooks/useKeyboardEvent.js');
require('../../../checkbox/group.js');
require('../../../checkbox/checkbox-group-props.js');
require('../../../hooks/slot.js');
require('../../../_chunks/dep-a894d3be.js');
require('../../../_chunks/dep-a3374be0.js');
require('../../../select/utils/index.js');
require('../../../select/consts/index.js');
require('../../../select/option-group.js');
require('../../../select/option-group-props.js');
require('../../../select/props.js');
require('../../../select/hooks/usePanelVirtualScroll.js');
require('../../../hooks/useVirtualScroll.js');
require('../../../select/hooks/useKeyboardControl.js');
require('../../../select/hooks/useSelectOptions.js');
require('../format/inputs.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var ColorPanel = Vue.defineComponent({
  name: "ColorPanel",
  props: _objectSpread(_objectSpread({}, colorPicker_props["default"]), {}, {
    togglePopup: {
      type: Function
    }
  }),
  setup: function setup(props2) {
    var baseClassName = colorPicker_hooks_index.useBaseClassName();
    var _useCommonClassName = hooks_useConfig.useCommonClassName(),
      STATUS = _useCommonClassName.STATUS;
    var _useConfig = configProvider_hooks_useConfig.useConfig("colorPicker"),
      t = _useConfig.t,
      globalConfig = _useConfig.globalConfig;
    var statusClassNames = STATUS.value;
    var _toRefs = Vue.toRefs(props2),
      inputValue = _toRefs.value,
      modelValue = _toRefs.modelValue,
      recentColors = _toRefs.recentColors;
    var _useVModel = hooks_useVModel["default"](inputValue, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray__default["default"](_useVModel, 2),
      innerValue = _useVModel2[0],
      setInnerValue = _useVModel2[1];
    var _useDefaultValue = hooks_useDefaultValue["default"](recentColors, props2.defaultRecentColors, props2.onRecentColorsChange, "recentColors"),
      _useDefaultValue2 = _slicedToArray__default["default"](_useDefaultValue, 2),
      innerRecentColors = _useDefaultValue2[0],
      setInnerRecentColors = _useDefaultValue2[1];
    var getModeByColor = function getModeByColor(input) {
      if (props2.colorModes.length === 1) return props2.colorModes[0];
      return props2.colorModes.includes("linear-gradient") && color.Color.isGradientColor(input) ? "linear-gradient" : "monochrome";
    };
    var mode = Vue.ref(getModeByColor(innerValue.value));
    var isGradient = Vue.computed(function () {
      return mode.value === "linear-gradient";
    });
    var defaultEmptyColor = Vue.computed(function () {
      return isGradient.value ? constants.DEFAULT_LINEAR_GRADIENT : constants.DEFAULT_COLOR;
    });
    var color$1 = Vue.ref(new color.Color(innerValue.value || defaultEmptyColor.value));
    var formatModel = Vue.ref(format.initColorFormat(props2.format, props2.enableAlpha));
    var addRecentlyUsedColor = function addRecentlyUsedColor() {
      if (innerRecentColors.value === null || innerRecentColors.value === false) {
        return;
      }
      var colors = cloneDeep.cloneDeep(innerRecentColors.value) || [];
      var currentColor = color$1.value.isGradient ? color$1.value.linearGradient : color$1.value.rgba;
      var index = colors.indexOf(currentColor);
      if (index > -1) {
        colors.splice(index, 1);
      }
      colors.unshift(currentColor);
      if (colors.length > constants.TD_COLOR_USED_COLORS_MAX_SIZE) {
        colors.length = constants.TD_COLOR_USED_COLORS_MAX_SIZE;
      }
      handleRecentlyUsedColorsChange(colors);
    };
    var handleRecentlyUsedColorsChange = function handleRecentlyUsedColorsChange(colors) {
      setInnerRecentColors(colors);
    };
    var emitColorChange = function emitColorChange(trigger) {
      var value = color$1.value.getFormattedColor(props2.format, props2.enableAlpha);
      setInnerValue(value, {
        color: color.getColorObject(color$1.value),
        trigger: trigger || "palette-saturation-brightness"
      });
    };
    Vue.watch(function () {
      return innerValue.value;
    }, function (newColor) {
      var newMode = getModeByColor(newColor);
      mode.value = newMode;
      color$1.value.isGradient = newMode === "linear-gradient";
      color$1.value.update(newColor);
    });
    var handleModeChange = function handleModeChange(newMode) {
      mode.value = newMode;
      var isGradientMode = newMode === "linear-gradient";
      color$1.value.isGradient = isGradientMode;
      if (isGradientMode) {
        color$1.value.update(color$1.value.gradientColors.length > 0 ? color$1.value.linearGradient : constants.DEFAULT_LINEAR_GRADIENT);
      } else {
        color$1.value.update(color$1.value.rgba);
      }
      emitColorChange();
    };
    var handleSatAndValueChange = function handleSatAndValueChange(_ref) {
      var saturation = _ref.saturation,
        value = _ref.value;
      var _color$value = color$1.value,
        sat = _color$value.saturation,
        val = _color$value.value;
      var changeTrigger = "palette-saturation-brightness";
      if (value !== val && saturation !== sat) {
        color$1.value.saturation = saturation;
        color$1.value.value = value;
        changeTrigger = "palette-saturation-brightness";
      } else if (saturation !== sat) {
        color$1.value.saturation = saturation;
        changeTrigger = "palette-saturation";
      } else if (value !== val) {
        color$1.value.value = value;
        changeTrigger = "palette-brightness";
      } else {
        return;
      }
      emitColorChange(changeTrigger);
    };
    var handleHueChange = function handleHueChange(hue) {
      var _props2$onPaletteBarC;
      color$1.value.hue = hue;
      emitColorChange("palette-hue-bar");
      (_props2$onPaletteBarC = props2.onPaletteBarChange) === null || _props2$onPaletteBarC === void 0 || _props2$onPaletteBarC.call(props2, {
        color: color.getColorObject(color$1.value)
      });
    };
    var handleAlphaChange = function handleAlphaChange(alpha) {
      color$1.value.alpha = alpha;
      emitColorChange("palette-alpha-bar");
    };
    var handleInputChange = function handleInputChange(input, alpha) {
      color$1.value.update(input);
      color$1.value.alpha = alpha;
      emitColorChange("input");
    };
    var handleGradientChange = function handleGradientChange(_ref2) {
      var key = _ref2.key,
        payload = _ref2.payload;
      var trigger = "palette-saturation-brightness";
      switch (key) {
        case "degree":
          color$1.value.gradientDegree = payload;
          trigger = "input";
          break;
        case "selectedId":
          color$1.value.gradientSelectedId = payload;
          break;
        case "colors":
          color$1.value.gradientColors = payload;
          break;
      }
      emitColorChange(trigger);
    };
    var handleSetColor = function handleSetColor(value, trigger) {
      var newMode = getModeByColor(value);
      mode.value = newMode;
      color$1.value.isGradient = newMode === "linear-gradient";
      color$1.value.update(value);
      emitColorChange(trigger);
    };
    return function () {
      var baseProps = {
        color: color$1.value,
        disabled: props2.disabled
      };
      var onlySupportGradient = props2.colorModes.length === 1 && props2.colorModes.includes("linear-gradient");
      var recentColors2 = innerRecentColors.value;
      if (onlySupportGradient && Array.isArray(recentColors2)) {
        recentColors2 = recentColors2.filter(function (color2) {
          return color.Color.isGradientColor(color2);
        });
      }
      var showUsedColors = !!Array.isArray(recentColors2);
      var systemColors = props2.swatchColors;
      if (systemColors === void 0) {
        systemColors = _toConsumableArray__default["default"](constants.DEFAULT_SYSTEM_SWATCH_COLORS);
      }
      if (onlySupportGradient) {
        systemColors = systemColors.filter(function (color2) {
          return color.Color.isGradientColor(color2);
        });
      }
      var showSystemColors = Array.isArray(systemColors);
      var renderSwatches = function renderSwatches() {
        if (!showSystemColors && !showUsedColors) return null;
        return Vue.createVNode(Vue.Fragment, null, [Vue.createVNode("div", {
          "class": "".concat(baseClassName.value, "__swatches-wrap")
        }, [showUsedColors ? Vue.createVNode(colorPicker_components_panel_swatches["default"], Vue.mergeProps(baseProps, {
          "title": t(globalConfig.value.recentColorTitle),
          "editable": true,
          "colors": recentColors2,
          "handleAddColor": addRecentlyUsedColor,
          "onSetColor": function onSetColor(color2) {
            return handleSetColor(color2, "recent");
          },
          "onChange": handleRecentlyUsedColorsChange
        }), null) : null, showSystemColors ? Vue.createVNode(colorPicker_components_panel_swatches["default"], Vue.mergeProps(baseProps, {
          "title": t(globalConfig.value.swatchColorTitle),
          "colors": systemColors,
          "onSetColor": function onSetColor(color2) {
            return handleSetColor(color2, "preset");
          }
        }), null) : null])]);
      };
      return Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__panel"), props2.disabled ? statusClassNames.disabled : false]
      }, [Vue.createVNode(colorPicker_components_panel_header["default"], Vue.mergeProps(props2, {
        "mode": mode.value,
        "onModeChange": handleModeChange
      }), null), Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__body")]
      }, [isGradient.value ? Vue.createVNode(colorPicker_components_panel_linearGradient["default"], Vue.mergeProps(baseProps, {
        "onChange": handleGradientChange,
        "enableMultipleGradient": props2.enableMultipleGradient
      }), null) : null, Vue.createVNode(colorPicker_components_panel_saturation["default"], Vue.mergeProps(baseProps, {
        "onChange": handleSatAndValueChange
      }), null), Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__sliders-wrapper")]
      }, [Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__sliders")]
      }, [Vue.createVNode(colorPicker_components_panel_hue["default"], Vue.mergeProps(baseProps, {
        "onChange": handleHueChange
      }), null), props2.enableAlpha ? Vue.createVNode(colorPicker_components_panel_alpha["default"], Vue.mergeProps(baseProps, {
        "onChange": handleAlphaChange
      }), null) : null]), props2.showPrimaryColorPreview ? Vue.createVNode("div", {
        "class": ["".concat(baseClassName.value, "__sliders-preview"), "".concat(baseClassName.value, "--bg-alpha")]
      }, [Vue.createVNode("span", {
        "class": "".concat(baseClassName.value, "__sliders-preview-inner"),
        "style": {
          background: isGradient.value ? color$1.value.linearGradient : color$1.value.rgba
        }
      }, null)]) : null]), Vue.createVNode(colorPicker_components_format_index["default"], Vue.mergeProps(props2, {
        "color": color$1.value,
        "format": formatModel.value,
        "onInputChange": handleInputChange
      }), null), renderSwatches()])]);
    };
  }
});

exports["default"] = ColorPanel;
//# sourceMappingURL=index.js.map
